
{% import "common/thumbnail.html.twig" as thumb %}

<div class="PNB" id='dialog_publicator'>
    <div id='publicator_selection' class="PNB10 ui-corner-all">
        <div class="PNB10">
            {% for id, record in route.get_elements %}
                <div id='pub_record_{{record.get_serialize_key()}}' class="diapo">
                    <div class="title">{{ record.get_title() }}</div>
                    {{thumb.format(record.get_thumbnail, 80, 80, "", true, false)}}
                </div>
            {% endfor %}
        </div>
        <form name="upload_form" method="GET" action="/prod/bridge/upload/">
            <div class="PNB10 record_actions" style="top:auto; height:30px; text-align:right;">
                <button class="single_menu act_upload btn btn-inverse">{% trans 'Upload' %}</button>
            </div>
            <input name="lst" type="hidden" value=""/>
            <input name="account_id" type="hidden" value=""/>
        </form>
        <form name="current_datas">
            {% for id, record in route.get_elements %}
                <input type="hidden" name="element[]" value="{{record.get_serialize_key()}}" />
            {% endfor %}
            <input name="lst" type="hidden" value="{{route.get_serialize_list()}}"/>
            <input name="account_id" type="hidden" value="{{current_account_id}}"/>
        </form>
    </div>
    <div class="PNB" style="top:200px">
        <div class="PNB10" id="pub_tabs" >
            <ul id="ul_main_pub_tabs" class="PNB">
                {% for account in user_accounts %}
                    <li class="li_{{ account.get_id() }} {% if not account.get_api().get_connector().is_configured() %}not_configured{% endif %} bridge_{{ account.get_api().get_connector().get_name() }} {% if account.get_id() == current_account_id %} ui-tabs-selected {% endif %}">
                        <a href="/prod/bridge/adapter/{{ account.get_id() }}/load-elements/{{ account.get_api().get_connector().get_default_element_type() }}/" class='account'>
                            <span style='display:block;float:left;'>{{ account.get_name() }}</span>
                            <input type="hidden" name="account_id" value="{{ account.get_id() }}" />
                        </a>
                    </li>
                {% endfor %}
                <li>
                    <a href="#tabs-new-account"> + {% trans 'nouveau' %}</a>
                </li>
            </ul>
            <div id='tabs-new-account' class="PNB" >
                <div class="PNB">
                    <div class="PNB10 container">
                        <div class="PNB10">
                            <div>{% trans 'Vers quel API voulez vous vous connecter ?' %}</div>
                            {% if available_apis|length > 0 %}
                                {% for api in available_apis %}
                                    {% if api.get_connector().is_configured() %}
                                        <form style="float:left; margin:5px;">
                                            <button class="login_button new_bridge_button btn btn-inverse">
                                                <table style="border:none; width:250px;">
                                                    <tr style="vertical-align:middle;">
                                                        <td style="width:130px;">
                                                            {% if api.get_connector().get_image_url() %}
                                                                <img src="{{ api.get_connector().get_image_url() }}" class="bridge_icon" />
                                                            {% endif %}
                                                        </td>
                                                        <td>
                                                            {{ api.get_connector().get_name() }}
                                                        </td>
                                                    </tr>
                                                </table>
                                            </button>
                                            <input type="hidden" name="url" value="{{api.generate_login_url(app['phraseanet.registry'], api.get_connector().get_name()) }}" />
                                        </form>
                                    {% endif %}
                                {% endfor %}
                            {% else %}
                                {% trans 'Aucun bridge disponible. Veuillez contacter un administrateur.' %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="PNB upload_window" style="display:none;"></div>

{# SCRIPT - HORIZONTAL TABS #}
<script type ="text/javascript">
$(function() {
  var pub_tabs = $("#pub_tabs");
  var container = $('#dialog_publicator');

  function popme(url) {
    var newwindow=window.open(url,'logger','height=500,width=800');
    if (window.focus)
    {
      newwindow.focus();
    }

    return false;
  }

  function panel_load($panel)
  {
      $(".new_bridge_button", $panel).bind("click", function(){
        var url = $(this).parent('form').find('input[name="url"]').val();
        popme(url);

        return false;
      });

      $('.error_box, .notice_box', $panel).delay(10000).fadeOut();

      $('.back_link', $panel).bind('click', function(){
        $('#pub_tabs').tabs('load',$('#pub_tabs').tabs('option', 'selected'));

        return false;
      });

      $('.bridge_action', $panel).bind('click', function(){
        var $this = $(this);

        $.ajax({
          type : 'GET',
          url : $(this).attr('href'),
          beforeSend : function(){
            var container = $('.container-bridge', $panel);
            container.empty();
            if( ! $this.hasClass('bridge_logout')) {
                container.addClass('loading');
            }
          },
          success : function(datas){
            $('.container-bridge', $panel).removeClass('loading').append(datas);
            panel_load($panel);
          },
          error:function(){
            $panel.removeClass("loading");
          },
          timeout:function(){
            $panel.removeClass("loading");
          }
        });

        return false;
      });

      $(".delete-account" , $panel).bind("click", function(){
            account_id = $(this).val();
            var buttons = {};

            buttons[language.valider] = function() {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "/prod/bridge/adapter/" + account_id + "/delete/",
                    data: {},
                    success: function(datas){
                        if(datas.success) {
                            confirmBox.Close();
                            publicator_reload_publicator();
                        } else {
                            confirmBox.Close();
                            var alertBox = p4.Dialog.Create({
                                size : 'Alert',
                                closeOnEscape : true,
                                closeButton:true
                            }, 2);

                            alertBox.setContent(datas.message);
                        }
                    }
                });
            };

            var confirmBox = p4.Dialog.Create({
                size : 'Alert',
                closeOnEscape : true,
                closeButton:true,
                cancelButton: true,
                buttons: buttons
            }, 2);

            confirmBox.setContent("{{'You are about to delete this account. Would you like to continue ?'|trans|e('js') }}");
      });

      $('.form_submitter', $panel).bind('click', function(){
        var $form = $(this).closest('form');
        var method = $form.attr('method');

        method = $.inArray(method.toLowerCase(), ['post', 'get']) ? method : 'POST';

        $.ajax({
          type : method,
          url : $form.attr('action'),
          data : $form.serializeArray(),
          beforeSend : function(){
            $panel.empty().addClass('loading');
          },
          success : function(datas){
            $panel.removeClass('loading').append(datas);
            panel_load($panel);
          },
          error:function(){
            $panel.removeClass("loading");
          },
          timeout:function(){
            $panel.removeClass("loading");
          }
        });

        return false;
      });


      $(".bridge_all_selector", $panel).bind("click", function() {
         var checkboxes = $('.bridge_element_selector', $panel);
         var $this = $(this);

         checkboxes.each(function(i, checkbox){
          if($(checkbox).is(':checked') !== $this.is(':checked'))
          {
            var event = jQuery.Event("click");
            event.selector_all = true;
            $(checkbox).trigger(event);
          }
         });
      });

      $('.bridge_element_selector', $panel)
      .bind('click', function(event){

        var $this = $(this);

        if(event.selector_all)
        {
          $this.attr('checked', $(".bridge_all_selector", $panel).is(':checked'));
        }

        $('form[name="bridge_selection"] input[name="elements_list"]', $panel).val(
            $.makeArray($('.bridge_element_selector:checked', $panel).map(function(i, el){
            return ($(el).val());
          })).join(';')
        );

        if($this.is(':checked'))
          $this.closest('.element').addClass('selected');
        else
          $this.closest('.element').removeClass('selected');

        if(!event.selector_all)
        {
          var bool = !($(".bridge_element_selector:checked", $panel).length !== $(".bridge_element_selector", $panel).length);
          $(".bridge_all_selector", $panel).attr('checked', bool);
        }
        else
        {
          if(event.stopPropagation)
            event.stopPropagation();

          return false;
        }
      });


      $('a.form_multiple_submitter', $panel).bind('click', function(){

        var $form = $(this).closest('form');
        var elements = $('form[name="bridge_selection"] input[name="elements_list"]', $panel).val();

        if($.trim(elements) === '')
          var n_elements = 0;
        else
          var n_elements = elements.split(';').length;

        if(n_elements === 0 && $form.hasClass('action_works_standalone') === false)
        {
          alert('No records selected');

          return false;
        }
        if(n_elements === 1 && $form.hasClass('action_works_single_element') === false)
        {
          alert('This action works only with a single records');

          return false;
        }
        if(n_elements > 1 && $form.hasClass('action_works_many_element') === false)
        {
          alert('This action works only with many records');

          return false;
        }

        $('input[name="elements_list"]', $form).val(elements);

        $.ajax({
          type : 'GET',
          url : $form.attr('action'),
          data : $form.serializeArray(),
          beforeSend : function(){
            $panel.empty().addClass('loading');
          },
          success : function(datas){
            $panel.removeClass('loading').append(datas);
            panel_load($panel);
          },
          error:function(){
            $panel.removeClass("loading");
          },
          timeout:function(){
            $panel.removeClass("loading");
          }
        });

        return false;

      });
  }

  pub_tabs.tabs({
    load: function(event, ui)
    {
      $panel = $(ui.panel);
      $('.container-bridge', $panel).removeClass('loading');
      panel_load($panel);
    }
    , panelTemplate : '<div class="PNB"><div class="PNB10 container-bridge"></div></div>'
    , spinner: '<i>loading...</i>'
    ,select: function(event, ui)
    {
      if($(ui.tab).hasClass('account'))
      {
        var container = $('.container-bridge', ui.panel);
        container.empty();
        $('.container', ui.panel).addClass('loading');
      }
    }
  }).addClass('ui-tabs-vertical ui-helper-clearfix');
  $('.ui-tabs-nav', pub_tabs).removeClass('ui-corner-all');


  $(".new_bridge_button", pub_tabs).bind("click", function(){
    var url = $(this).parent('form').find('input[name="url"]').val();
    popme(url);

    return false;
  });

  $("ul li a.account", pub_tabs).bind("click", function(){
    $('#dialog_publicator form[name="current_datas"] input[name="account_id"]').val($('input[name="account_id"]', this).val());
  });

  $("ul li.ui-tabs-selected a.account", pub_tabs).trigger("click");

  $('#publicator_selection .PNB10:first').selectable();

  $('#publicator_selection button.act_upload').bind('click', function(){

    var $this = $(this);
    var $form = $this.closest('form');

    $('input[name=lst]', $form).val(
      $.makeArray(
        $('#publicator_selection .diapo.ui-selected').map(function(i, el){
          return $(el).attr('id').split('_').slice(2,4).join('_');
        })
      ).join(';')
    );

    var account_id = $('form[name="current_datas"] input[name="account_id"]').val();
    $('input[name="account_id"]', $form).val(account_id);

    var $panel = $('#pub_tabs .ui-tabs-panel:visible');
    
    $.ajax({
      type : 'GET',
      url : '/prod/bridge/upload/',
      data : $form.serializeArray(),
      beforeSend : function(){
        $panel.empty().addClass('loading');
      },
      success : function(datas){
        $panel.removeClass('loading').append(datas);
        panel_load($panel);
      },
      error:function(){
        $panel.removeClass("loading");
      },
      timeout:function(){
        $panel.removeClass("loading");
      }
    });

    return false;
  });



  $("li", pub_tabs).removeClass('ui-corner-top').addClass('ui-corner-left');
  $("#api_connexion").click(function(){
    container.dialog("close")
  });

  {% if route.get_count_element_received() == 0 %}
    alert('{{ "Vous n\'avez selectionne aucun element"|trans|e('js') }}');
    container.dialog('close');
  {% elseif route.get_count_actionable() == 0 %}
    alert('{{ "Vous n\'avez pas assez de droits sur les elements selectionnes"|trans|e('js') }}');
    container.dialog('close');
  {% elseif route.get_count_actionable() != route.get_count_element_received() %}
    alert('{{ "Vous n\'avez pas assez de droits sur certains elements selectionnes"|trans|e('js') }}');
  {% endif %}
});
</script>
