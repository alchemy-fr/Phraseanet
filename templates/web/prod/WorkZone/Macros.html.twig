{# ============== global basket actions as menu ============= #}
{% macro basket_menu(app, basket, context, iamowner, href, ref_id) %}
    <div class="menu">
        <table>
            <tr>
            {#
                       {% if basket.isVoteBasket() %}
                            <td>
                                <img
                                    style="display:inline;padding:0;margin:0;"
                                    title="{{ 'Vous avez envoye une demande de validation de document sur ce panier' | trans }}"
                                    class="basketTips"
                                    src="/assets/common/images/icons/myvalid.png"
                                />
                            </td>
                        {% endif %}
                        {% if basket.getPusher() %}
                            <td>
                                {% set pusher = basket.getPusher().getDisplayName() | e %}
                                <img
                                    class="basketTips"
                                    title="{% trans with {'%pusher%' : pusher} %}paniers:: panier recu de %pusher%{% endtrans %}"
                                    src="/assets/common/images/icons/push16.png"/>
                            </td>
                        {% endif %}
            #}
            </tr>
            <tr>
                {# no need a icon to display description since it's included on basket popup
                <td>
                    <img title="{{ basket.getDescription()|e }}"
                         class="basket_title"
                         src="/assets/common/images/icons/valid.png"/>

                </td>
                #}
                <td class="contextMenuWrapper">
                    <a class="contextMenuTrigger" href="{{ href }}" data-ref_id="{{ ref_id }}">
                        <i class="icomoon icon-circle  fa-stack-2x fa-inverse-bg"
                           aria-hidden="true"></i>
                        <i class="icomoon icon-round-more_horiz-24px white fa-stack-1x fa-inverse"
                           aria-hidden="true"></i>
                    </a>
                </td>
            </tr>
        </table>

        <table style="display:none;" class="contextMenu basketcontextmenu" id="{{ ref_id }}_menu">
            <tbody>
            <tr>
                <td>
                    <div class="context-menu context-menu-theme-flat">

                        {# ----- "lightbox" is only for baskets and feedbacks (nb: vshared basket is managed by VALIDATION) ----- #}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::VALIDATIONS')
                            or context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS') %}
                        <div title="" class="context-menu-item">
                            <div class="context-menu-item-inner">
                                <a href="{{ path('lightbox_compare', { 'basket' : basket.getId() }) }}"
                                   target="_blank">
                                    <img src="/assets/lightbox/images/lightbox-icon.png"
                                         style="width: 20px; box-shadow: 0 2px 2px rgba(0,0,0,.2);"
                                         alt="{{ 'Lightbox' | trans }}">
                                    <span>{{ 'Lightbox' | trans }}</span>
                                </a>
                            </div>
                        </div>
                        {% endif %}

                        {#  no need to use lightbox/validation route... lightbox/compare does the same ?
                        {% if basket.isVoteBasket() %}
                            <div title="" class="context-menu-item">
                                <div class="context-menu-item-inner">
                                    <a target="_blank"
                                       href="{{ path('lightbox_validation', { 'basket' : basket.getId() }) }}">
                                        <img src="/assets/common/images/icons/basket_validation.png"
                                             style="width: 22px;"
                                             alt="{{ 'action::Valider' | trans }}">
                                        <span>{{ 'action::Valider' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}
                        #}

                        {# ----- "rename", "archive" is only for owners ----- #}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS') %}
                            <div title="" class="context-menu-item">
                                <div class="context-menu-item-inner">
                                    <a class="basket-update-action"
                                       data-basket-id="{{ basket.getId() }}"
                                       title="{{ 'action::renommer' | trans }}" href="#">
                                        <img src="/assets/common/images/icons/rename.png"
                                             style="width: 26px; margin-left: -2px; margin-right: -2px;"
                                             alt="{{ 'action::renommer' | trans }}">
                                        <span>{{ 'action::renommer' | trans }}</span>
                                    </a>
                                </div>
                            </div>

                            <div title="" class="context-menu-item">
                                <div class="context-menu-item-inner basket-archive-action"
                                     data-basket-id="{{ basket.getId() }}">
                                    <a href="#">
                                        <img src="/assets/common/images/icons/archive.png"
                                             style="width: 26px; margin-left: -2px; margin-right: -2px;"
                                             alt="{{ 'Archive' | trans }}">
                                        <span>{{ 'Archive' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}

                        {# ----- "delete" is only for owners ----- #}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::STORIES') %}
                            <div title="" class="context-menu-item menu3-custom-item">
                                <div class="context-menu-item-inner">
                                    <a class="story_unfix" href="{{ path('prod_workzone_detach_story', { 'sbas_id' : basket.getRecord(app).get_sbas_id(), 'record_id' : basket.getRecord(app).get_record_id()}) }}">
                                        <img src="/assets/common/images/icons/delete.png"
                                             style="width: 22px;"
                                             alt="{{ 'action : supprimer' | trans }}">
                                        <span>{{ 'action : supprimer' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS') %}
                            <div title="" class="context-menu-item">
                                <div class="context-menu-item-inner basket-delete-action"
                                     id="SSTTREMOVER_{{ basket.getId() }}" data-context="SSTT">
                                    <a href="#">
                                        <img src="/assets/common/images/icons/delete.png"
                                             style="width: 22px;"
                                             alt="{{ 'action : supprimer' | trans }}">
                                        <span>{{ 'action : supprimer' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}

                        {# ----- quit share is only for share (todo: or ended validations ?) ----- #}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::VALIDATIONS')
                           and not basket.isVoteBasket() %}
                            <div title="" class="context-menu-item">
                                <div class="context-menu-item-inner basket-quitshare-action"
                                     id="SSTTREMOVER_{{ basket.getId() }}" data-context="SSTT">
                                    <a href="#" title="{{ 'basket : quitshare' | trans }}">
                                        <i class="fa fa-remove"></i>
                                        <span>{{ 'basket : quitshare' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}

                        {# ----- "edit" is only for owners with right ----- #}

                        {% if (context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::STORIES'))
                            and app.getAclForUser(app.getAuthenticatedUser()).has_right(constant('\\ACL::CANMODIFRECORD')) %}
                            <div title="" class="context-menu-item menu3-custom-item">
                                <div class="context-menu-item-inner edit-record-action"
                                     data-kind="record"
                                     data-id="{{ basket.getRecord(app).get_serialize_key() }}"
                                >
                                    <a href="#">
                                        <img src="/assets/common/images/icons/edit-pen.png"
                                             style="width: 22px;"
                                             alt="{{ 'action::editer' | trans }}">
                                        <span>{{ 'action::editer' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}

                        {# ----- "share/feedback" is only for owners with right ----- #}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS')
                            and app.getAclForUser(app.getAuthenticatedUser()).has_right(constant('\\ACL::CANPUSH')) %}
                            {% set nparticipants = basket.getParticipants | length %}

                            {% if nparticipants == 0 %}
                                {# if simple basket : show both share button (for creation) #}
                                <div title="" class="context-menu-item menu3-custom-item">
                                    <div class="context-menu-item-inner basket-share-action"
                                         data-kind="basket"
                                         data-id="{{ basket.getId() }}"
                                    >
                                        <a href="#" title="{{ 'action::share basket' | trans }}">
                                            <i class="fa fa-share share_sent" style="width: 17px;padding-top: 3px;padding-bottom: 2px;height: 17px;"></i>
                                            <span>{{ 'action::share basket' | trans }}</span>
                                        </a>
                                    </div>
                                </div>
                            {% else %}
                                {# if share : show share button (for modification) #}
                                <div title="" class="context-menu-item menu3-custom-item">
                                    <div class="context-menu-item-inner basket-share-action"
                                         data-kind="basket"
                                         data-id="{{ basket.getId() }}"
                                    >
                                        <a href="#" title="{{ 'action::modify share basket' | trans }}">
                                            {% if basket.isVoteBasket() %}
                                                <i class="fa fa-bullhorn vote_sent" style="width: 17px;padding-top: 3px;padding-bottom: 2px;height: 17px;"></i>
                                            {% else %}
                                                <i class="fa fa-share share_sent" style="width: 17px;padding-top: 3px;padding-bottom: 2px;height: 17px;"></i>
                                            {% endif%}
                                            <span>{{ 'action::modify share basket' | trans }}</span>
                                        </a>
                                    </div>
                                </div>
                            {% endif %}
                        {% endif %}

                        {# ----- "detach" is only for stories ----- #}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::STORIES') %}
                            <div title="" class="context-menu-item menu3-custom-item">
                                <div class="context-menu-item-inner">
                                    <a class="story_unfix"
                                       href="{{ path('prod_workzone_detach_story', { 'sbas_id' : basket.getRecord(app).get_sbas_id(), 'record_id' : basket.getRecord(app).get_record_id()}) }}">
                                        <img src="/assets/common/images/icons/detach.png"
                                             style="width: 26px; margin-left: -2px; margin-right: 2px;"
                                             alt="{{ 'action::detacher' | trans }}">
                                        <span style="margin-left: 4px;">{{ 'action::detacher' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {%  endif %}

                        {# ----- "reorder" is only for owners ----- #}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::STORIES')%}
                            <div title="" class="context-menu-item menu3-custom-item">
                                <div class="context-menu-item-inner">
                                    <a class="story-reorder-content-action"
                                       title="{{ 'Re-ordonner' | trans }}"
                                       data-db-id="{{ basket.getRecord(app).get_sbas_id }}"
                                       data-record-id="{{ basket.getRecord(app).get_record_id() }}"
                                       href="#">
                                        <img src="/assets/common/images/icons/set-order.png"
                                             style="width: 26px; margin-left: -2px; margin-right: -2px;"
                                             alt="{{ 'Re-ordonner' | trans }}">
                                        <span>{{ 'Re-ordonner' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}

                        {% if context == constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS') %}
                            <div title="" class="context-menu-item">
                                <div class="context-menu-item-inner">
                                    <a class="basket-reorder-content-action" data-basket-id="{{ basket.getId() }}" title="{{ 'Re-ordonner' | trans }}" href="#">
                                        <img src="/assets/common/images/icons/set-order.png" style="width: 26px; margin-left: -2px; margin-right: -2px;" alt="{{ 'Re-ordonner' | trans }}">
                                        <span>{{ 'Re-ordonner' | trans }}</span>
                                    </a>
                                </div>
                            </div>
                        {% endif %}

                    </div>
                </td>
            </tr>
            </tbody>
        </table>
    </div>

{% endmacro %}


{% macro make_bloc(app, WorkZone, selected_type, selected_id, srt) %}
    {% set basketBlockChecked = user_setting('workzone_basket_display') %}
    {% set basketBlockChecked = (basketBlockChecked is empty or basketBlockChecked == 1) ? true : false %}
    {% set basketBlockClass = 'basket-block' %}

    {% set shareBlockChecked = user_setting('workzone_share_display') %}
    {% set shareBlockChecked = (shareBlockChecked is empty or shareBlockChecked == 1) ? true : false %}
    {% set shareBlockClass = 'share-block' %}

    {% set feedbackBlockChecked = user_setting('workzone_feedback_display') %}
    {% set feedbackBlockChecked = (feedbackBlockChecked is empty or feedbackBlockChecked == 1) ? true : false %}
    {% set feedbackBlockClass = 'feedback-block' %}

    {% set pushBlockChecked = user_setting('workzone_push_display') %}
    {% set pushBlockChecked = (pushBlockChecked is empty or pushBlockChecked == 1) ? true : false %}
    {% set pushBlockClass = 'push-block' %}

    {% set storyBlockChecked = user_setting('workzone_story_display') %}
    {% set storyBlockChecked = (storyBlockChecked is empty or storyBlockChecked == 1) ? true : false %}
    {% set storyBlockClass = 'story-block' %}

    <div class="alert_datas_changed ui-corner-all">
        <a title="{{ 'rafraichir' | trans }}" class="basket_refresher" href="#">
            {{ 'Vous avez recu un nouveau panier' | trans }}
        </a>
    </div>
    <div class="bloc">
        <div id="basket-filter" class="basket-filter">
            <span class="filter-title">{{ 'See' | trans }} : </span>
            <span class="filter-item">
                <label id="basket-list" class="checkbox inline" for="basketFilter_basket">
                    <input type="checkbox" class="checkbox " id="basketFilter_basket" data-prop="workzone_basket_display" value=".{{ basketBlockClass }}" {% if basketBlockChecked %} checked {% endif %}>
                    {{ 'Basket' | trans }}
                </label>
            </span>
            <span class="filter-item">
                <label id="share-list" class="checkbox inline" for="basketFilter_share">
                    <input type="checkbox" class="checkbox " id="basketFilter_share" data-prop="workzone_share_display" value=".{{ shareBlockClass }}" {% if shareBlockChecked %} checked {% endif %}>
                    {{ 'basket:: Shared' | trans }}
                </label>
            </span>
            <span class="filter-item">
                <label id="feedback-list" class="checkbox inline" for="basketFilter_feedback">
                    <input type="checkbox" class="checkbox " id="basketFilter_feedback" data-prop="workzone_feedback_display" value=".{{ feedbackBlockClass }}" {% if feedbackBlockChecked %} checked {% endif %}>
                    {{ 'Feedback' | trans }}
                </label>
            </span>
            <span class="filter-item">
                <label id="push-list" class="checkbox inline" for="basketFilter_push">
                    <input type="checkbox" class="checkbox " id="basketFilter_push" data-prop="workzone_push_display" value=".{{ pushBlockClass }}" {% if pushBlockChecked %} checked {% endif %}>
                    {{ 'Push' | trans }}
                </label>
            </span>
            <span class="filter-item">
                <label id="story-list" class="checkbox inline" for="basketFilter_story">
                    <input type="checkbox" class="checkbox " id="basketFilter_story" data-prop="workzone_story_display" value=".{{ storyBlockClass }}" {% if storyBlockChecked %} checked {% endif %}>
                    {{ 'Stories' | trans }}
                </label>
            </span>
            <span>
                <i class="fa fa-refresh refresh-basket" title="{{ 'basket:: refresh workzone' | trans }}"></i>
            </span>
        </div>

        <div class="insidebloc">
            {% set content = WorkZone.getContent(srt) %}


            {# =========================== list feedbacks (validations) AND SHARES =============================== #}
            {#  result of BasketRepository::findActiveValidationByUser(me) #}
            {#  = I am participant, but i'm NOT the author #}
            {#  nb : list feedbacks AND shared ! #}
            {% if content.get(constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::VALIDATIONS')) | length  > 0 %}
                <div class="wz-block_title"><hr/><span>{{ 'wz:block_title:shared_with_me' | trans }}</span></div>
                <div id="validations-block" class="validations-block">
                    {% for _basketEx in content.get(constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::VALIDATIONS')) %}
                        {% set basket = _basketEx['object'] %}
                        {% set classes = _basketEx['data']['classes']|join(' ') %}
                        {% set is_read = _basketEx['data']['isRead'] %}

                        <div
                             id="SSTT_{{ basket.getId() }}" data-basket_id="{{ basket.getId() }}"
                             class="ui-accordion-header ui-state-default
                             ui-corner-all header SSTT {% if not basket.getId() %}unread{% endif %}
                             {% if basket.getId() == selected_id and selected_type == 'basket' %}active{% endif %}
                             {{ classes }}
                             ">

                            <a class="workzone-menu-title"
                               href="{{ path('prod_baskets_basket', { 'basket' : basket.getId() }) }}">

                                <span>
                                    <i class="fa fa-circle unread_flag"></i>

                                    {# only relevant icon(s) will be css-displayed, depending on ["vote_rec", "share_rec"] upper classes #}
                                    <i class="fa fa-spinner basket_wip" title="This basket is WIP"></i>
                                    <i class="fa fa-comment vote_rec" title="please comment"></i>
                                    <i class="fa fa-users share_rec" title="shared with you"></i>
                                    {# i own this basket but it was pushed to me #}
                                    {% set pusher = basket.getPusher().getDisplayName() | e %}
                                    <i class="fa fa-gift push_rec" title="{% trans with {'%pusher%' : pusher} %}paniers:: panier recu de %pusher%{% endtrans %}"></i>
                                    {% set nparticipants = basket.getParticipants | length %}
                                    {# i own this basket and there are participants (maybe me) #}
                                    {# i am the owner / sender(?) of this "vote" (=feedback) basket #}
                                    <i class="fa fa-bullhorn vote_sent" title="{{ 'Vous avez envoye une demande de validation de document sur ce panier' | trans }}"></i>
                                    {# simple share #}
                                    <i class="fa fa-share share_sent" title="{% trans with {'%n%' : nparticipants} %}paniers:: you shared this basket with %n%{% endtrans %}"></i>
                                    {# simple basket #}
                                    <i class="icomoon icon-stackoverflow basket"></i>
                                    &nbsp;
                                    <span class="basketTips" tooltipsrc="{{ path('prod_tooltip_basket', { 'basket' : basket.getId() }) }}">
                                    {{ basket.getName()|e }}
                                    </span>

    {#
                                    <i class="fa fa-search basketTips"
                                       tooltipsrc="{{ path('prod_tooltip_basket', { 'basket' : basket.getId() }) }}"
                                    ></i>
     #}
                                </span>
                            </a>

                            {{ _self.basket_menu(
                                app,
                                basket,
                                constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::VALIDATIONS'),
                                false,
                                path('prod_baskets_getwip',{ 'basket' : basket.getId() }),
                                "SSTT_" ~ basket.getId()
                            ) }}

                        </div>
                        <div id="SSTT_content_{{ basket.getId() }}" class="content basket {{ classes }}" style="position:relative; overflow:visible;"></div>
                    {% endfor %}
                </div>
            {% endif %}

            {# ======================================== list baskets ========================================== #}
            {#  result of BasketRepository::findActiveByUser(me) #}
            {#  = im a the owner of (not archived) basket #}

            {% if content.get(constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS')) | length  > 0 %}
                <div class="wz-block_title"><hr/><span>{{ 'wz:block_title:my_baskets' | trans }}</span></div>
                <div id="all_baskets-block" class="all_baskets-block">
                    {% for _basketEx in content.get(constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS')) %}
                        {% set basket = _basketEx['object'] %}
                        {% set classes = _basketEx['data']['classes']|join(' ') %}
                        {% set is_read = _basketEx['data']['isRead'] %}

                        <div
                             id="SSTT_{{ basket.getId() }}" data-basket_id="{{ basket.getId() }}"
                             class="ui-accordion-header ui-state-default
                             ui-corner-all header SSTT {% if not is_read %}unread{% endif %}
                             {% if basket.getId() == selected_id and selected_type == 'basket' %} active {% endif %}
                             {{ classes }}
                             ">

                            <a class="workzone-menu-title"
                               href="{{ path('prod_baskets_basket', { 'basket' : basket.getId() }) }}" style="">

                                <span>
                                    <i class="fa fa-circle unread_flag"></i>

                                    {# only relevant icon(s) will be css-displayed, depending on ["push_rec", "vote_sent", "share_sent", "basket"] upper classes #}

                                    <i class="fa fa-spinner basket_wip" title="This basket is WIP"></i>
                                    <i class="fa fa-comment vote_rec" title="please comment"></i>
                                    <i class="fa fa-users share_rec" title="shared with you"></i>
                                    {# i own this basket but it was pushed to me #}
                                    {% if  basket.getPusher() is not null %}
                                        {% set pusher = basket.getPusher().getDisplayName() | e %}
                                        <i class="fa fa-gift push_rec" title="{% trans with {'%pusher%' : pusher} %}paniers:: panier recu de %pusher%{% endtrans %}"></i>
                                    {% endif %}
                                    {% set nparticipants = basket.getParticipants | length %}
                                    {# i own this basket and there are participants (maybe me) #}
                                    {# i am the owner / sender(?) of this "vote" (=feedback) basket #}
                                    <i class="fa fa-bullhorn vote_sent" title="{{ 'Vous avez envoye une demande de validation de document sur ce panier' | trans }}"></i>
                                    {# simple share #}
                                    <i class="fa fa-share share_sent" title="{% trans with {'%n%' : nparticipants} %}paniers:: you shared this basket with %n%{% endtrans %}"></i>
                                    {# simple basket #}
                                    <i class="icomoon icon-stackoverflow basket"></i>
                                    &nbsp;
                                    <span class="basketTips" tooltipsrc="{{ path('prod_tooltip_basket', { 'basket' : basket.getId() }) }}">
                                    {{ basket.getName()|e }}
                                    </span>

                                </span>
                            </a>

                            {{ _self.basket_menu(
                                app,
                                basket,
                                constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::BASKETS'),
                                true,
                                path('prod_baskets_getwip', { 'basket' : basket.getId() }),
                                "SSTT_" ~ basket.getId()
                            ) }}

                        </div>
                        <div id="SSTT_content_{{ basket.getId() }}" class="content basket {{ classes }}" style="position:relative; overflow:visible;"></div>
                    {% endfor %}
                </div>
            {% endif %}

            {# ======================================== list stories ========================================== #}

            {% if content.get(constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::STORIES')) | length > 0 %}
                <div class="wz-block_title"><hr/><span>{{ 'wz:block_title:stories' | trans }}</span></div>
                <div id="stories-block" class="stories-block">
                    {% for _storyEx in content.get(constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::STORIES')) %}
                        {% set story = _storyEx['object'] %}

                        <div
                             id="SSWZ_{{ story.getId() }}" sbas="{{ story.getSbasId() }}"
                             class="STORY_{{ story.getRecord(app).get_serialize_key() }} ui-accordion-header ui-state-default
                             ui-corner-all header SSTT grouping unread story-block
                             {% if story.getId() == selected_id and selected_type == 'story' %}active{% endif %}">

                            <a class="workzone-menu-title"
                               href="{{ path('prod_stories_story', { 'sbas_id' : story.getRecord(app).get_sbas_id, 'record_id' : story.getRecord(app).get_record_id() }) }}">

                                <span>
                                    {# insert an invisible "unread" disc to align other icons with basket ones #}
                                    <i class="fa fa-circle unread_flag" style="color: transparent"></i>
                                    <i class="icomoon icon-stack story"></i>

                                    &nbsp;

                                    <span class="basketTips" tooltipsrc="{{ path('prod_tooltip_story', { 'sbas_id' : story.getRecord(app).get_sbas_id(), 'record_id' : story.getRecord(app).get_record_id() }) }}">
                                    {{ story.getRecord(app).get_title() }}
                                    </span>
                                </span>
                            </a>

                            {# no need for a path or id because stories are not checked as "wip" #}
                            {{ _self.basket_menu(
                                app,
                                story,
                                constant('\\Alchemy\\Phrasea\\Helper\\WorkZone::STORIES'),
                                true,
                                "",
                                ""
                            ) }}

                        </div>
                        <div sbas="{{ story.getSbasId() }}" id="SSTT_content_{{ story.getId() }}" class="content grouping story-block"
                             style="position:relative; overflow:visible;"></div>
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    </div>
{% endmacro %}


{% macro element(wz_scope, container, contained, record, ord) %}
    {% set box_height = 110 %}
    {% if app['settings'].getUserSetting(app.getAuthenticatedUser(), 'basket_title_display') == '1' %}
        {% set box_height = (box_height + 20) %}
    {% endif %}
    {% if app['settings'].getUserSetting(app.getAuthenticatedUser(), 'basket_status_display') == '1' %}
        {% set box_height = (box_height + 20) %}
    {% endif %}

    {% import 'common/thumbnail.html.twig' as thumbnail %}
    <div class="chim-content">
        <div class="CHIM diapo CHIM_{{ record.get_serialize_key() }} open-preview-action"
             data-kind="{% if wz_scope == 'groupings' %}REG{% else %}BASK{% endif %}"
             data-position="{{ ord }}"
             data-id="{% if wz_scope == 'groupings' %}{{ container.get_sbas_id() }}_{{ container.get_record_id() }}{% else %}{{ container.getId() }}{% endif %}"
             style="height:{{ box_height }}px;"
             id="CHIM_{% if wz_scope == 'groupings' %}{{ record.get_serialize_key() }}{% else %}{{ contained.getId() }}{% endif %}">
            <input type="hidden" name="id" value="{{ record.get_serialize_key() }}"/>
            <div class="diapo_top">
                {% if app['settings'].getUserSetting(app.getAuthenticatedUser(), 'basket_title_display') == '1' %}
                    <div class="title">
                        {{ record.get_title()|truncate(20, "...") }}
                    </div>
                {% endif %}
                {% if app['settings'].getUserSetting(app.getAuthenticatedUser(), 'basket_status_display') == '1' %}
                    <div class="status" style="position:relative;height:20px;overflow-y:visible;z-index:15;">
                        {% for flag in record_flags(record) %}
                            <img src="{{ flag.path }}" title="{{ attribute(flag.labels, app.locale) }}"/>
                        {% endfor %}
                    </div>
                {% endif %}
            </div>
            <div class="record-number">
                {{ record.getNumber() }}
            </div>
            {{ thumbnail.format(record.get_thumbnail,140,140, '', true, false) }}
            <div class="bottom" style="margin-bottom: 3px;">
                {% if app['settings'].getUserSetting(app.getAuthenticatedUser(), 'basket_caption_display') == '1' %}
                    <span class="captionRolloverTips captionTips"
                          tooltipsrc="{{ path('prod_tooltip_caption', { 'sbas_id' : record.get_sbas_id(), 'record_id' : record.get_record_id(), 'context' : 'basket', 'number' : record.getNumber() }) }}">
                       <i class="icomoon icon-round-list-24px white"></i>
                  </span>
                {% endif %}
                {% if app['settings'].getUserSetting(app.getAuthenticatedUser(), 'basket_type_display') == '1' %}
                    <div class="basket_type"> {{ record_doctype_icon(record) }}</div>
                {% endif %}
                {% if wz_scope != 'basket'  or (app.getAuthenticatedUser().getId() == container.getUser().getId() or (container.isParticipant(app.getAuthenticatedUser()) and container.getParticipant(app.getAuthenticatedUser()).canModify())) %}
                    <a
                            {% if wz_scope == 'groupings' %}
                                id="WZEL{{ container.get_sbas_id() }}_{{ container.get_record_id() }}_{{ record.get_sbas_id() }}_{{ record.get_record_id() }}"
                                href="{{ path('prod_stories_story_remove_element', { 'sbas_id' : container.get_sbas_id(), 'record_id' : container.get_record_id(), 'child_sbas_id' : record.get_sbas_id(), 'child_record_id' : record.get_record_id() }) }}"
                            {% elseif wz_scope == 'basket' %}
                                id="WZEL_{{ container.getId() }}_{{ record.get_sbas_id() }}_{{ record.get_record_id() }}"
                                href="{{ path('prod_baskets_basket_element_remove', { 'basket' : container.getId(), 'basket_element_id' : contained.getId()}) }}"
                            {% elseif wz_scope == 'basket' %}
                                href="#"
                            {% endif %}
                            class="WorkZoneElementRemover {{ wz_scope }}" title="{{ 'delete' | trans }}">
                        <i class="icomoon icon-circle  fa-stack-2x" aria-hidden="true"></i>
                        <i class="icomoon icon-round-close-24px   fa-stack-1x " aria-hidden="true"></i>
                    </a>
                {% endif %}
            </div>
        </div>
    </div>
{% endmacro %}

{% macro display_basket(app, basket) %}
    {% for basket_element in basket.getElements() %}
        <div class="chim-wrapper wrapCHIM_{{ basket_element.getRecord(app).get_serialize_key() }}">
            {{ _self.element('basket', basket, basket_element, basket_element.getRecord(app), basket_element.getOrd()) }}
        </div>
    {% endfor %}
{% endmacro %}

{% macro display_validation(app, basket, ordre) %}
    <div style="margin:5px 0;text-align:center;">
        <form>
            <select name="valid_ord">
                <option {% if ordre=='nat' %}selected{% endif %}
                        value="nat">{{ 'panier:: ordre du panier' | trans }}</option>
                <option {% if ordre=='desc' %}selected{% endif %}
                        value="desc">{{ 'panier:: ordre Validation ascendante' | trans }}</option>
                <option {% if ordre=='asc' %}selected{% endif %}
                        value="asc">{{ 'panier:: ordre Validation descendante' | trans }}</option>
            </select>
        </form>
    </div>

    {% for basket_element in basket.getElementsByOrder(ordre) %}
        <span class="chim-wrapper chim-feedback-item wrapCHIM_{{ basket_element.getRecord(app).get_serialize_key() }} valid">
          <table style="width: 100%; min-width: 330px; display: inline-block;">
              <tr>
                  <td style="width:80px;">
                    {{ _self.element('basket', basket, basket_element, basket_element.getRecord(app), basket_element.getOrd()) }}
                  </td>
                  <td style="width:100%;">
                      <table style=width:100%>
                          {% for vote in basket_element.getVotes(true) %}  {# true: include "un-voted" for all participants #}
                              {% if basket.getParticipant(app.getAuthenticatedUser()).getCanSeeOthers() or vote.getParticipant().getUser() == app.getAuthenticatedUser() %}
                                  <tr>
                                  <td style="position: relative">
                                      <span class="feedback_user_name">{{ vote.getParticipant().getUser().getDisplayName() }}</span>
                                      <span class="line_separator"></span>
                                  </td>
                                  <td>
                                  {% if vote.getParticipant().getCanAgree() %}
                                      {% if vote.getAgreement() == true %}
                                          <img style="cursor:help;" src='/assets/common/images/icons/green-check.png'
                                               title="{{ "L'utilisateur approuve ce document" | trans }}"/>
                                        {% elseif vote.getAgreement() is null %}
                                          <img style="cursor:help;" src='/assets/common/images/icons/no-response.png'
                                               title="{{ "L'utilisateur n'a pas encore donne son avis sur ce document" | trans }}"/>
                                        {% else %}
                                          <img style="cursor:help;" src='/assets/common/images/icons/red-cross.png'
                                               title="{{ "L'utilisateur desapprouve ce document" | trans }}"/>
                                      {% endif %}
                                  {% else %}
                                      <img style="cursor:help;" src='/assets/common/images/icons/vote-admin.png'
                                           title="{{ "This user does not participate to the validation but is only viewer." | trans }}"/>
                                  {% endif %}
                                  </td>
                                  <td style="width:25px;">
                                  {% if vote.getNote() != '' %}
                                      <span class="noteTips macroFileEdit"
                                            title="{{ vote.getNote()|nl2br }}">&nbsp;</span>
                                  {% endif %}
                                  </td>
                              </tr>
                              {% endif %}
                          {% endfor %}
                      </table>
                  </td>
              </tr>
          </table>
      </span>
    {% endfor %}
{% endmacro %}

{% macro make_expose_bloc(app, WorkZone) %}
    <div id="expose_workzone" class="expose_workzone">
        <div id="expose_sel" class="custom_select_dark" style="padding:10px;">
            {% set expose_list = app['conf'].get(['phraseanet-service', 'expose-service', 'exposes']) %}
            {% set providerId = app['session'].get('auth_provider.id') %}
            {% if providerId is not null %}
                {% set provider = app['authentication.providers'].get(providerId) %}
                {% if provider.getType() == 'PsAuth'  %}
                    {% set auth_base_url = provider.getOptions()['base-url'] | trim('/') %}
                {% endif %}
            {% endif %}

            <select id="expose_list" name="expose_list" class="expose_list">
                <option value="">{{ 'prod:expose:select expose' | trans }}</option>
                {% for key in expose_list|keys %}
                    {% if (
                        (auth_base_url is defined and expose_list[key].auth_base_uri | trim('/') == auth_base_url)
                        or providerId is empty)
                        and expose_list[key].activate_expose  %}

                        <option value="{{ key }}">{{ key }}</option>
                    {% endif %}
                {% endfor %}
            </select>
        </div>

        <div style="padding:10px;">
            <span class="expose_connected">
            </span>
            <a href="#" class="pull-right expose_logout_link hidden" style="padding-top: 5px;">
                <span>{{ 'expose:: logout' | trans }}</span>
            </a>
        </div>

        <button class="btn btn-secondary btn-sm expose_field_mapping hidden" href="#"
                style="margin-left:10px">{{ 'prod:expose field mapping' |trans }}</button>

        <div class="add_expose_block hidden" style="padding:10px;display:flex; align-items: center;">
            <a id="add_publication" class="add_publication" href="#">
                <span>{{ 'prod:expose:Add publication' | trans }}</span>
                <img src="/assets/common/images/icons/Basket-New.png"
                     title="{{ 'prod:expose:Add publication' | trans }}">
            </a>

            <label class="checkbox" for="expose_editable_only" style="font-size: 12px; margin-left: auto;">
                <input type="checkbox" id="expose_editable_only" name="expose_editable_only" value="1">
                {{ 'prod:expose Editable only' | trans }}
            </label>

            <label class="checkbox" for="expose_mine_only" style="font-size: 12px;margin-left: auto;">
                <input type="checkbox" id="expose_mine_only" name="expose_mine_only" value="1">
                {{ 'prod:expose Mine only' | trans }}
            </label>

            <button class="btn-success refresh-list"
                    style="margin-bottom: 5px; margin-left: auto;">{{ 'prod:expose:Refresh' | trans }}
            </button>
        </div>

        <div class="insidebloc expose_insidebloc">
            <div id="validations-block" class="validations-block publication-list">
            </div>
        </div>
    </div>
    <div id='DIALOG-expose-edit'>
        <div class="expose-edit-content" style="min-height: 522px;"></div>
    </div>
    <div id="DIALOG-field-mapping">
        <div class="expose-field-content" style="min-height: 300px!important;max-height: 500px!important"></div>
    </div>

    {% import 'prod/WorkZone/ExposeNew.html.twig' as ExposeNew %}
    {{ ExposeNew.add_publication(app) }}

{% endmacro %}
