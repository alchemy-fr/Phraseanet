{% import 'common/thumbnail.html.twig' as thumbnail %}
<div id="reorder_box">
    <div id="reorder_options" class="row-fluid">
        <form class="form-inline span10">
        <label for="auto_order">{{ 'Reordonner automatiquement' | trans }}</label>
        <select id="auto_order">
            <option value="">{{ 'Choisir' | trans }}</option>
            <option value="default">{{ 'Re-initialiser' | trans }}</option>
            <option value="title">{{ 'Titre' | trans }}</option>
            <option value="date_created">{{ 'Date de cr√©ation' | trans }}</option>
            <option value="date_updated">{{ 'Date de modification' | trans }}</option>
        </select>
        <button type="button" class="autoorder btn btn-inverse">{{ 'Re-ordonner' | trans }}</button>
        <button type="button" class="reverseorder btn btn-inverse">{{ 'Inverser' | trans }}</button>
        </form>
        <form class="form-inline span2" name="reorder" method="POST" action="{{ path('prod_baskets_basket_reorder', { 'basket' : basket.getId() }) }}">
        {% for element in basket.getElements() %}
                <input type="hidden" name="element[{{ element.getId() }}]" value="{{ element.getOrd() }}"/>
        {% endfor %}
        <input type="submit" class="btn btn-inverse" value="{{ 'boutton::valider' | trans }}" />
        </form>
    </div>
    <div class="elements row-fluid">
    {% for element in basket.getElements() %}
        <div id="ORDER_{{ element.getId() }}" class="CHIM diapo" style="height:130px;overflow:hidden;">
            <div class="title" title="{{ element.getRecord(app).get_title() }}" style="position:relative;z-index:1200;height:30px;overflow:hidden;text-align:center;text-overflow: ellipsis; line-height: 15px;">
                {{ element.getRecord(app).get_title() }}
            </div>
            {{ thumbnail.format(element.getRecord(app).get_thumbnail(), 80, 80, '', false, false) }}
            <form style="display:none;">
                <input type="hidden" name="id" value="{{ element.getId() }}"/>
                <input type="hidden" name="title" value="{{ element.getRecord(app).get_title() }}"/>
                <input type="hidden" name="default" value="{{ element.getOrd() }}"/>
                <input type="hidden" name="date_created" value="{{ element.getRecord(app).getCreated() | date('Y-m-dTH:i:s') }}"/>
                <input type="hidden" name="date_updated" value="{{ element.getRecord(app).getUpdated() | date('Y-m-dTH:i:s') }}"/>
            </form>
        </div>
    {% endfor %}
    </div>
</div>

  <script type="text/javascript">
    $(document).ready(function(){
        var container = $('#reorder_box');//p4.Dialog.get(1).getDomElement();

        $('button.autoorder', container).bind('click', function(){
            autoorder();
            return false;
        });
        $('button.reverseorder', container).bind('click', function(){
            reverse_order();
            return false;
        });

        function autoorder() {
            var val = $.trim($('#auto_order').val());

            if (val == '') {
                return;
            }

            var diapos = [];
            $('#reorder_box .diapo form').each(function (i, n) {
                diapos.push({
                    "title": $('input[name=title]', n).val(),
                    "order": parseInt($('input[name=default]', n).val()),
                    "id": $('input[name=id]', n).val(),
                    "date_created": new Date($('input[name=date_created]', n).val()),
                    "date_updated": new Date($('input[name=date_updated]', n).val()),
                });
            });

            var elements = [];
            var sorterCallback;
            if (val === "default") {
                sorterCallback = function (diapo) {
                    return diapo.order;
                };
                elements = sorting(sorterCallback, diapos, false);
            }else if(val === 'date_updated' || val === 'date_created'){
                sorterCallback = function(diapo) {
                    if(val === 'date_created') {
                        return diapo.date_created;
                    }

                    return diapo.date_updated;
                };
                elements = sorting(sorterCallback, diapos, true);
            }else {
                sorterCallback = function(diapo) {return diapo.title.toLowerCase();};
                elements = sorting(sorterCallback, diapos, false);
            }


            $('#reorder_box .elements').append(elements);
        }

        function sorting(sorterCallback, diapos, reverse) {
            var elements = [];
            if(reverse == true) {
                _.chain(diapos)
                    .sortBy(sorterCallback)
                    .reverse()
                    .each(function(diapo) {
                        elements.push($('#ORDER_'+ diapo.id));
                    });
            }else {
                _.chain(diapos)
                    .sortBy(sorterCallback)
                    .each(function(diapo) {
                        elements.push($('#ORDER_'+ diapo.id));
                    });
            }
            return elements;
        }

        function reverse_order() {
            var $container = $('#reorder_box .elements');
            $('#reorder_box .diapo').each(function() {
                $(this).prependTo($container);
            });
        }

        $('.elements div', container).bind('click', function(){
            $(this).addClass("selected").siblings().removeClass("selected");
            return false;
        });

        $('.elements', container).sortable({
            appendTo : container,
            placeholder: 'diapo ui-sortable-placeholder',
            distance:20,
            cursorAt: {
                top:10,
                left:-20
            },
            items:'div.diapo',
            scroll:true,
            scrollSensitivity:40,
            scrollSpeed:30,
            start:function(event, ui){
                var selected = $('.selected',container);

                selected.each(function(i,n){
                    $(n).attr('position',i);
                });

                var n = selected.length - 1;

                $('.selected:visible', container).hide();

                while(n > 0){
                    $('<div style="height:130px;" class="diapo ui-sortable-placeholderfollow"></div>').after($('.diapo.ui-sortable-placeholder', container));
                    n--;
                }
            },
            stop:function(event, ui){

                $('.diapo.ui-sortable-placeholderfollow', container).remove();

                var main_id = $(ui.item[0]).attr('id');

                var selected = $('.selected',container);
                var sorter = new Array();


                selected.each(function(i,n){

                    var position = parseInt($(n).attr('position'));

                    if(position !== '') {
                        sorter[position] = $(n);
                    }

                    var id = $(n).attr('id');
                    if(id == main_id) {
                        return;
                    }

                });

                var before = true;
                var last_moved = $(ui.item[0]);
                $(sorter).each(function(i,n){
                    $(n).show().removeAttr('position');
                    if($(n).attr('id') == main_id){
                        before = false;
                    } else {
                        if(before){
                            $(n).before($(ui.item[0]));
                        } else{
                            $(n).after($(last_moved));
                        }

                    }
                    last_moved = sorter[i];
                });

            },
            change:function(){
                $('.diapo.ui-sortable-placeholderfollow', container).remove();

                var n = OrderSelection.length() - 1 ;
                while(n > 0) {
                    $('<div style="height:130px;" class="diapo ui-sortable-placeholderfollow"></div>').after($('.diapo.ui-sortable-placeholder', container));
                    n--;
                }
            }
        }).disableSelection();

        var OrderSelection = new Selectable($('.elements', container), {
            selector : '.CHIM'
        });

        $('form[name="reorder"]', container).bind('submit', function(event){

            //$this.SetLoader(true);
            var $form = $(this);

            $('.elements form', container).each(function(i, el){
                var id = $('input[name="id"]', $(el)).val();

                $('input[name="element[' + id + ']"]', $form).val(i+1);
            });

            $.ajax({
                type: $form.attr('method'),
                url: $form.attr('action'),
                data: $form.serializeArray(),
                dataType: 'json',
                beforeSend:function(){

                },
                success: function(data){
                    if(!data.success) {
                        alert(data.message);
                    }
                    p4.WorkZone.refresh('current');
                    p4.Dialog.get(1).Close();

                    return;
                },
                error: function(){

                },
                timeout: function(){

                }
            });

            return false;
        });
    });
  </script>
