{% macro format_checkbox(admin, right, name, users, type) %}
    {% set id = right['base_id'] %}
    {% set class = 'base_id' %}
    {% if type == 'sbas' %}
      {% set id = right['sbas_id'] %}
      {% set class = 'sbas_id' %}
      {% set sbas_class = "" %}
    {% else %}
      {% set sbas_class = "inside_sbas_" ~ right['sbas_id'] %}
    {% endif %}

    {% set display = 'block' %}

    {% if right[name] != users|length and name != constant('\\ACL::ACCESS') and right[constant('\\ACL::ACCESS')] != users|length and type != 'sbas' %}
      {% set display = 'none' %}
    {% endif %}

    {% if right[name] == 0 %}
      {% set class = 'unchecked' %}
    {% elseif right[name] == users|length %}
      {% set class = 'checked' %}
    {% else %}
      {% set class = 'mixed' %}
    {% endif %}

  {% if name == 'access' %}
    {% if class != 'checked' and type == 'base' and app.getAclForUser(admin).has_access_to_base(id) is empty %}
      <div class="no_switch">
      </div>
    {% else %}
      <div style="display:{{display}}" class="{{class}} switch_right {{sbas_class}} {{type}} {{type}}_{{id}} right_{{name}}">
        <input class="{{class}}" name="{{name}}_{{id}}" value="" type="hidden"/>
       </div>
    {% endif %}
  {% else %}
    {% if class != 'checked' and type == 'base' and app.getAclForUser(admin).has_right_on_base(id, name) is empty %}
      <div class="no_switch">
      </div>
    {% elseif class != 'checked' and type == 'sbas' and app.getAclForUser(admin).has_right_on_sbas(id, name) is empty %}
      <div class="no_switch">
      </div>
    {% else %}
      <div style="display:{{display}}" class="{{class}} switch_right {{sbas_class}} {{type}} {{type}}_{{id}} right_{{name}}">
        <input class="{{class}}" name="{{name}}_{{id}}" value="" type="hidden"/>
       </div>
    {% endif %}
  {% endif %}
{% endmacro %}
<style>
  div.no_switch,
  div.switch_quota,
  div.switch_masks,
  div.switch_time,
  div.switch_right{
    background-repeat:no-repeat;
    background-position: center center;
    width:12px;
    height:12px;
    margin:0 auto;
  }
  div.no_switch{
    background-image:url(/assets/common/images/icons/ccoch5.gif);
  }
  td.users_col{
    vertical-align:middle;
    text-align:center;
    width:23px;
    border:0px solid transparent;
  }
  .ui-datepicker{
    z-index:1500;
  }
  #api_tab .info-label {
    width: 250px;
    display: inline-block;
  }

  #auth_failure_tab table,
  #user_infos_tab table {
    width: 70%;
  }

  #basket_tab table, #basket_tab th,
  #feed_tab table, #feed_tab th,
  #record_acl_tab table,
  #record_acl_tab th {
    border: 1px solid #a5a0a0;
    border-collapse: collapse;
    text-align: center;
    padding:0px 10px;
  }

  #basket_tab td,
  #feed_tab td,
  #record_acl_tab td{
    border-right: 1px solid #a5a0a0;
    border-left: 1px solid #a5a0a0;
    padding:0px 10px;
  }

  #api_tab th,
  #api_tab td,
  #auth_failure_tab th,
  #auth_failure_tab td,
  #user_infos_tab th,
  #user_infos_tab td {
    text-align: left;
  }

</style>

<div>
  {% if main_user is not empty %}
    {% set lastConnection = main_user.getLastConnection() is not null ? main_user.getLastConnection() | date('Y-m-d  H:i:s') : ' - ' %}
    <h4>{{ main_user.getDisplayName() ~ ' ( id : ' ~ main_user.getId() ~' )   ' ~  'admin::compte-utilisateur derniere connexion' | trans ~ ' :  ' ~ lastConnection }}</h4>
  {% endif %}

  <div class="tabs PNB" style="bottom:40px;">
    <ul>
      <li>
        <a href="#rights_tab">{{ 'Rights' | trans }}</a>
      </li>
      {% if main_user is not empty and main_user.isTemplate is empty and main_user.isSpecial is empty %}
        <li>
          <a href="#user_infos_tab">{{ 'Infos' | trans }}</a>
        </li>
        <li>
          <a href="#api_tab">{{ 'admin::users: api list' | trans }}</a>
        </li>
        <li>
          <a href="#auth_failure_tab">{{ 'admin::users: Auth failure' | trans }}</a>
        </li>
        <li>
          <a href="#record_acl_tab">Record ACL</a>
        </li>
        <li>
          <a href="#feed_tab">Publications</a>
        </li>
        <li>
          <a href="#basket_tab">Baskets</a>
        </li>
      {% endif %}
    </ul>
    <div id="rights_tab" class="" style="top:40px;">
      <form id="users_rights_form" method="post" action="{{ path('admin_users_rights_apply') }}">
        <input type="hidden" name="users" value="{{users_serial}}"/>
        <table style="width:100%;" cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td>
              {% if main_user is not empty %}

                {% if main_user.isSpecial is not empty %}
                  {% if main_user.getLogin() == 'invite' %}
                      {{ 'Reglages:: reglages d acces guest' | trans }}
                  {% elseif main_user.getLogin() == 'autoregister' %}
                      {{ 'Reglages:: reglages d inscitpition automatisee' | trans }}
                  {% endif %}
                {% else %}
                  {% set display_name = main_user.getDisplayName() | e %}
                  {% trans with {'%display_name%' : display_name} %}Edition des droits de %display_name%{% endtrans %}
                {% endif %}
              {% else %}
                {% set number = users|length %}
                {% trans with {'%number%' : number} %}Edition des droits de %number% utilisateurs{% endtrans %}
              {% endif %}
            </td>
            <td style="text-align:right;">
              {{ 'Apply a template' | trans }}
              <select name="template">
                <option value="">{{ 'boutton::choisir' | trans }}</option>
                {% for template in templates %}
                    <option value="{{ template.getId() }}">{{ template.getLogin() }}</option>
                {% endfor %}
              </select>
               <button class="btn" type='button' id='reset_rights'>{{ 'Delete all users rights' | trans }}</button>
            </td>
          </tr>
        </table>
        <table cellspacing="0" cellpadding="0" border="0" style="table-layout: auto;width:850px;height:67px;bottom:auto;top:50px;" class="">
          <thead>
            <tr>
              <th style="width:168px;">

              </th>
              <th colspan="25">
                <img src="/assets/common/images/lng/inclin-{{app['locale']}}.png" style="width:682px"/>
              </th>
            </tr>
          </thead>
        </table>
        <div class="" style="bottom:40px;top:127px;overflow-y:auto;overflow-x:hidden;width:870px;max-height: 450px;">
          <table class="hoverable" cellspacing="0" cellpadding="0" border="0" style="table-layout: fixed;width:840px;">
            <tbody>
              {% set sbas = '' %}
              {% for rights in datas %}
              {% if rights['sbas_id'] != sbas %}
              {% set sbas = rights['sbas_id'] %}
              {% if loop.index != 1 %}
                <tr style="height:15px;">
                  <td></td>
                </tr>
              {% endif %}

              <tr>
                <td style="width:140px;overflow:hidden;white-space:nowrap;">
                  {{rights['sbas_id']|sbas_labels(app)}}
                </td>
                <td style="width:25px"></td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_access"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_actif"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_canputinalbum"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_candwnldpreview"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_nowatermark"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_candwnldhd"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_cancmd"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col">

                </td>
                <td class="users_col">
                  <div class="time_trigger time_sbas_{{rights['sbas_id']}}">
                    <img width="14" src="/assets/common/images/icons/info-circle-grey.svg" />
                    <input type="hidden" name="time_sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col">

                </td>
                <td width="97" style="width: 97px;">

                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_canaddrecord"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_canmodifrecord"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_chgstatus"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_candeleterecord"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_imgtools"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_canadmin"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_canreport"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_canpush"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_manage"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="users_col options">
                  <div>
                    <i class="fa fa-caret-down fa-right"></i>
                    <input type="hidden" name="right" value="right_modify_struct"/>
                    <input type="hidden" name="sbas_id" value="{{rights['sbas_id']}}"/>
                  </div>
                </td>
                <td class="main-right-item" style="text-align:center;width:19px;" title="{{ 'Allowed to publish' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::BAS_CHUPUB'), users, 'sbas')}}
                </td>
                <td class="main-right-item" style="text-align:center;width:19px;" title="{{ 'Manage Thesaurus' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::BAS_MODIF_TH'), users, 'sbas')}}
                </td>
                <td class="main-right-item" style="text-align:center;width:19px;" title="{{ 'Manage Database' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::BAS_MANAGE'), users, 'sbas')}}
                </td>
                <td class="main-right-item" style="text-align:center;width:19px;" title="{{ 'Manage DB fields' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::BAS_MODIFY_STRUCT'), users, 'sbas')}}
                </td>
                <td style="text-align:center;width:48px;">
                </td>
              </tr>
              {% endif %}
              <tr class="right-items">
                <td style="width: 140px;overflow:hidden;white-space:nowrap;" title="{{rights['base_id']|bas_labels(app)}}">
                  {{rights['base_id']|bas_labels(app)}}
                </td>
                <td class="select-all-line" title="{{'admin::users:edit: Manage inline selection' | trans }}" style="width: 25px">
                  <div class="select-all-line-btn">
                    <i class="fa fa-caret-right fa-right"></i>
                  </div>
                  <div class="users_check_line_wrap hide">
                    <div class="checker check_left_right">{{'admin::users:edit: check read right' | trans }}</div>
                    <div class="unchecker check-all_right">{{'admin::users:edit: check all right' | trans }}</div>
                  </div>
                </td>
                <td class="users_col case_right_access left-right" title="{{ 'Access' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::ACCESS'), users, 'base')}}
                </td>
                <td class="users_col case_right_actif left-right" title="{{ 'Active' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::ACTIF'), users, 'base')}}
                </td>
                <td class="users_col case_right_canputinalbum left-right" title="{{ 'Allowed to add in basket' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANPUTINALBUM'), users, 'base')}}
                </td>
                <td class="users_col case_right_candwnldpreview left-right" title="{{ 'Access to preview' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANDWNLDPREVIEW'), users, 'base')}}
                </td>
                <td class="users_col case_right_nowatermark left-right" title="{{ 'Remove watermark' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::NOWATERMARK'), users, 'base')}}
                </td>
                <td class="users_col case_right_candwnldhd left-right" title="{{ 'Access to HD' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANDWNLDHD'), users, 'base')}}
                </td>
                <td class="users_col case_right_cancmd left-right" title="{{ 'Allowed to order' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANCMD'), users, 'base')}}
                </td>
                <td class="users_col case_right_quota" title="{{ 'Set download quotas' | trans }}">
                  <div class="quota_trigger quota_{{rights['base_id']}} base_{{rights['base_id']}}">
                    {% if rights[constant('\\ACL::RESTRICT_DWNLD')] > 0 %}
                    <img width="14" src="/assets/common/images/icons/info-circle-red.svg" />
                    {% else %}
                    <img width="14" src="/assets/common/images/icons/info-circle-green.svg" />
                    {% endif %}
                    <input type="hidden" name="quota_base_id" value="{{rights['base_id']}}"/>
                  </div>
                </td>
                <td class="users_col case_right_time" title="{{ 'Set time restrictions' | trans }}">
                  <div class="time_trigger time_{{rights['base_id']}} base_{{rights['base_id']}}">
                    {% if rights['time_limited'] > 0 %}
                      <img width="14" src="/assets/common/images/icons/info-circle-red.svg" />
                    {% else %}
                      <img width="14" src="/assets/common/images/icons/info-circle-green.svg" />
                    {% endif %}
                    <input type="hidden" name="time_base_id" value="{{rights['base_id']}}"/>
                  </div>
                </td>
                <td class="users_col case_right_masks" title="{{ 'Set statuses restrictions' | trans }}">
                  <div class="masks_trigger quotatime_{{rights['base_id']}} base_{{rights['base_id']}}">
                    {% if rights['masks'] > 0 %}
                      <img width="14" src="/assets/common/images/icons/info-circle-red.svg" />
                    {% else %}
                      <img width="14" src="/assets/common/images/icons/info-circle-green.svg" />
                    {% endif %}
                    <input type="hidden" name="masks_base_id" value="{{rights['base_id']}}"/>
                  </div>
                </td>

                <td style="text-align:center;width:97px;"></td>

                <td class="users_col case_right_canaddrecord" title="{{ 'Allowed to add' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANADDRECORD'), users, 'base')}}
                </td>
                <td class="users_col case_right_canmodifrecord" title="{{ 'Allowed to edit' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANMODIFRECORD'), users, 'base')}}
                </td>
                <td class="users_col case_right_chgstatus" title="{{ 'Allowed to change statuses' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CHGSTATUS'), users, 'base')}}
                </td>
                <td class="users_col case_right_candeleterecord" title="{{ 'Allowed to delete' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANDELETERECORD'), users, 'base')}}
                </td>
                <td class="users_col case_right_imgtools" title="{{ 'Access to image tools' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::IMGTOOLS'), users, 'base')}}
                </td>
                <td class="users_col case_right_canadmin" title="{{ 'Manage users' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANADMIN'), users, 'base')}}
                </td>
                <td class="users_col case_right_canreport" title="{{ 'Allowed to access report' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANREPORT'), users, 'base')}}
                </td>
                <td class="users_col case_right_canpush" title="{{ 'Allowed to push' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::CANPUSH'), users, 'base')}}
                </td>
                <td class="users_col case_right_manage" title="{{ 'Manage collection' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::COLL_MANAGE'), users, 'base')}}
                </td>
                <td class="users_col case_right_modify" title="{{ 'Manage values lists' | trans }}">
                  {{_self.format_checkbox(app.getAuthenticatedUser(), rights, constant('\\ACL::COLL_MODIFY_STRUCT'), users, 'base')}}
                </td>

                <td colspan="5">
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </form>
    </div>

    {% if main_user is not empty and main_user.isTemplate is empty and main_user.isSpecial is empty %}
      <div id="user_infos_tab" class="" style="top:40px;overflow:auto;">
        <form id="user_infos_form">
          <table>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur identifiant' | trans }}
              </td>
              <td>
                <input type="text" value="{{main_user.getLogin()}}" readonly="readonly" />
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur sexe' | trans }}
              </td>
              <td>
                <select name="gender">
                  <option {% if main_user.getGender() == 0 %}selected="selected"{% endif %} value="0" >{{ 'admin::compte-utilisateur:sexe: mademoiselle' | trans }}</option>
                  <option {% if main_user.getGender() == 1 %}selected="selected"{% endif %} value="1" >{{ 'admin::compte-utilisateur:sexe: madame' | trans }}</option>
                  <option {% if main_user.getGender() == 2 %}selected="selected"{% endif %} value="2" >{{ 'admin::compte-utilisateur:sexe: monsieur' | trans }}</option>
                </select>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur prenom' | trans }}
              </td>
              <td>
                <input type="text" name="first_name" value="{{main_user.getFirstName()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur nom' | trans }}
              </td>
              <td>
                <input type="text" name="last_name" value="{{main_user.getLastName()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur email' | trans }}
              </td>
              <td>
                <input type="text" name="email" value="{{main_user.getEmail()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur adresse' | trans }}
              </td>
              <td>
                <input type="text" name="address" value="{{main_user.getAddress()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur code postal' | trans }}
              </td>
              <td>
                <input type="text" name="zip" value="{{main_user.getZipCode()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur ville' | trans }}
              </td>
              <td>
                <input type="text" value="{{ main_user.getGeonameId() }}" class="geoname_field" name="geonameid"
                       autocomplete="false"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur poste' | trans }}
              </td>
              <td>
                <input type="text" name="function" value="{{main_user.getJob()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur societe' | trans }}
              </td>
              <td>
                <input type="text" name="company" value="{{main_user.getCompany()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur activite' | trans }}
              </td>
              <td>
                <input type="text" name="activite" value="{{main_user.getActivity()}}"/>
              </td>
            </tr>

            <tr>
              <td>
                {{ 'admin::compte-utilisateur telephone' | trans }}
              </td>
              <td>
                <input type="text" name="telephone" value="{{main_user.getPhone()}}"/>
              </td>
            </tr>
            <tr>
              <td>
                {{ 'admin::compte-utilisateur fax' | trans }}
              </td>
              <td>
                <input type="text" name="fax" value="{{main_user.getFax()}}"/>
              </td>
            </tr>
          </table>
        </form>

        <div>
          <label for="lock" style="margin-right: 20px;display:inline-block;">Email locked</label>
          <input type="radio" id="lock" name="email-locked" value="locked" style="margin-right: 10px;"
                  {% if main_user.isMailLocked() %} checked {% endif %}>
          <input type="radio" id="unlock" name="email-locked" value="unlock" style="margin-left: 10px;"
                  {% if not main_user.isMailLocked() %} checked {% endif %}>
          <label for="unlock" style="margin-left: 20px;display:inline-block;">Email unlocked</label>
        </div>

        <div style="margin-top: 20px;">
          {% set usrProviders = app['repo.usr-auth-providers'].findByUser(main_user) %}
          {% if usrProviders|length > 0 %}
            <h3>{{ 'admin::users: list user providers' | trans }}</h3>
            <table>
              <thead>
                <th>{{ 'admin::users: provider' | trans }}</th>
                <th>{{ 'admin::users: distance_id' | trans }}</th>
                <th>{{ 'admin::users: creation date' | trans }}</th>
                <th>{{ 'admin::users: modification date' | trans }}</th>
              </thead>
              <tbody>
              {% for usrProvider in usrProviders %}
                <tr>
                  <td>{{ usrProvider.getProvider() }}</td>
                  <td>{{ usrProvider.getDistantId() }}</td>
                  <td>{{ usrProvider.getUpdated() | date('Y-m-d H:i:s') }}</td>
                  <td>{{ usrProvider.getCreated() | date('Y-m-d H:i:s')}}</td>
                </tr>
              {% endfor %}
                </tbody>
            </table>
          {% endif %}
        </div>
    </div>

      <div id="api_tab" class="" style="top:40px;">
        <h1>{{ 'admin::users: list user api application' | trans }}</h1>
        {% set apiApplications = app['repo.api-applications'].findByUser(main_user, true) %}
        {% if apiApplications|length > 0 %}
          {% for apiApplication in apiApplications %}
            <div style="margin-top: 30px;">
              <h2>
                - {{ apiApplication.getName() }}
                {% if apiApplication.getCreator() is not empty and apiApplication.getCreator().getId() == main_user.getId() %}
                  <span style="margin-left: 30px;" class="badge badge-success">{{ 'admin :users: user owned api' | trans }}</span>
                {% else %}
                  <span style="margin-left: 30px;" class="badge badge-inverse">{{ 'admin::users: user api use' | trans }}</span>
                {% endif %}
              </h2>
              <div><span class="info-label"><strong> {{ 'admin::users: api ID' | trans }} : </strong></span> <span> {{ apiApplication.getId() }} </span></div>
              <div><span class="info-label"><strong> {{ 'admin::users: creation date' | trans }} : </strong></span> <span> {{ apiApplication.getCreated() | date('Y-m-d H:i:s') }} </span></div>
              <div><span class="info-label"><strong> {{ 'admin::users: modification date' | trans }} : </strong></span> <span> {{ apiApplication.getUpdated() | date('Y-m-d H:i:s') }} </span></div>
              <div>
                <span class="info-label"><strong> {{ 'admin::users: grant password info' | trans }} : </strong></span>
                <span> {% if apiApplication.isPasswordGranted() %} {{ 'admin::users: password granted' | trans }} {% else %} {{ 'admin::users: password not granted' | trans }} {% endif %}</span>
              </div>
              <div><span class="info-label"><strong> {{ 'admin::users: type info' | trans }} : </strong></span> <span> {{ apiApplication.getType() }} </span></div>
              <div><span class="info-label"><strong> {{ 'admin::users: webhook url' | trans }} : </strong></span> <span> {{ apiApplication.getWebhookUrl() }} </span></div>

              <label class="checkbox" style="padding-left: 0px; margin-top:10px">
                {{ 'admin::users: webhook activation' | trans }}
                <input data-path="{{ path('developers_application_active_webhook', { "application" : apiApplication.getId() }) }}"
                       type="checkbox"  id="webhook_activation"
                        {% if apiApplication.isWebhookActive() %} checked="checked" {% endif %}
                        {% if apiApplication.getWebhookUrl() is empty%} disabled {% endif %}
                       style="margin-left:10px; margin-right:10px;" />
              </label>
            </div>
          {% endfor %}
        {% else %}
          <h5>{{ 'admin::users: no api defined for this user' | trans }}</h5>
        {% endif %}

        {% set apiCodes = app['orm.em'].getRepository('Phraseanet:ApiOauthCode').findByUserAccount(main_user) %}
        {% if apiCodes | length > 0 %}
          <h3 style="margin-top: 30px;">{{ 'admin::users: api oauth code list' | trans }}</h3>
          <table style="border-spacing: 20px;width: 80%;">
          <thead>
          <tr>
            <th>{{ 'admin::users: Api id' | trans }}</th>
            <th>{{ 'admin::users: Api name' | trans }}</th>
            <th>{{ 'admin::users: redirect uri' | trans }}</th>
            <th>{{ 'admin::users: scope' | trans }}</th>
            <th>{{ 'admin::users: creation date' | trans }}</th>
          </tr>
          </thead>
          <tbody >
          {% for apiCode in apiCodes %}
            <tr>
              <td>{{ apiCode.account.application.id }}</td>
              <td>{{ apiCode.account.application.name }}</td>
              <td>{{ apiCode.redirectUri }}</td>
              <td>{{ apiCode.scope }}</td>
              <td>{{ apiCode.created | date('Y-m-d H:i:s') }}</td>
            </tr>
          {% endfor %}
          </tbody>
        </table>
        {% endif %}

      </div>

      <div id="auth_failure_tab">
        <div id="auth_failure_locked">
          {% set failuresLocked = app['repo.auth-failures'].findBy({'username':main_user.getLogin(), 'locked': true}, {'created': 'desc'}) %}
          {% if failuresLocked | length > 0 %}
            <h3>{{ 'admin::users: auth failure locked list' | trans }}</h3>
            <table style="border-spacing: 20px;">
              <thead>
              <tr>
                <th>{{ 'admin::users: username' | trans }}</th>
                <th>{{ 'admin::users: ip' | trans }}</th>
                <th>{{ 'admin::users: creation date' | trans }}</th>
              </tr>
              </thead>
              <tbody >
              {% for failure in failuresLocked %}
                <tr>
                  <td>{{ failure.getUsername() }}</td>
                  <td>{{ failure.getIp }}</td>
                  <td>{{ failure.getCreated() | date('Y-m-d H:i:s') }}</td>
                </tr>
              {% endfor %}
              </tbody>
            </table>

            <button data-username="{{ main_user.getLogin() }}" style="margin-top: 20px; margin-bottom: 20px" class="btn btn-warning" id="reset-auth-failure">{{ 'admin::users: reset auth failure' | trans }}</button>
          {% endif %}
        </div>

        <div id="auth_failure_unlocked">
          {% set failuresUnlocked = app['repo.auth-failures'].findBy({'username':main_user.getLogin(), 'locked': false}, {'created': 'desc'}) %}
          {% if failuresUnlocked | length > 0 %}
            <h3>{{ 'admin::users: auth failure unlocked list' | trans }}</h3>
            <table style="border-spacing: 20px;">
              <thead>
              <tr>
                <th>{{ 'admin::users: username' | trans }}</th>
                <th>{{ 'admin::users: ip' | trans }}</th>
                <th>{{ 'admin::users: creation date' | trans }}</th>
              </tr>
              </thead>
              <tbody id="auth_failure_unlocked_list">
              {% for failure in failuresUnlocked %}
                <tr>
                  <td>{{ failure.getUsername() }}</td>
                  <td>{{ failure.getIp() }}</td>
                  <td>{{ failure.getCreated() | date('Y-m-d H:i:s') }}</td>
                </tr>
              {% endfor %}
              </tbody>
            </table>
          {% endif %}
        </div>
      </div>

      <div id="record_acl_tab">
        <h1>User record acl</h1>
        <div style="margin-bottom: 20px;">
          <label class="checkbox" for="expired-right" style="display:inline-block;margin-right: 30px;">
            <input type="checkbox" id="expired-right" name="expired-right" value="1">
            expired right
          </label>
          <select id="acl-databox-filter">
            <option value="">{{ 'button::choose databox' | trans }}</option>
            {% for databoxId in databoxIds %}
              <option value="{{ databoxId }}">{{ databoxId | sbas_labels(app) }}</option>
            {% endfor %}
          </select>

          <select id="acl-type-filter" style="margin-bottom: 0px;margin-left: 30px;">
            <option value="">{{ 'button::choose type' | trans }}</option>
            <option value="order">order</option>
            <option value="push">push</option>
            <option value="validate">validate</option>
          </select>

          <input type="number" id="acl-record-filter" placeholder="recordId" style="margin-bottom: 0px;margin-left: 30px;">
        </div>

        <p> <span class="acl-result-count">{{ records_acl|length }} / {{ total_count }}</span> (last 200 rights displayed)</p>
        <table>
          <thead>
            <tr>
              <th>databox name</th>
              <th>record_id</th>
              <th>right on document</th>
              <th>right on subdef</th>
              <th>type</th>
              <th>pusher name</th>
              <th>expire on</th>
            </tr>
          </thead>
          <tbody id="record_acl_list">
            {% for r_a in records_acl %}
              <tr>
                <td>{{ r_a.sbas_id | sbas_labels(app) }}</td>
                <td>{{ r_a.record_id }}</td>
                <td>{{ r_a.document }}</td>
                <td>{{ r_a.preview }}</td>
                <td>{{ r_a.type }}</td>
                <td>{{ r_a.pusher_name }}</td>
                <td>
                  {% if r_a.expire_on %}
                    {{ r_a.expire_on|date('Y-m-d H:i:s') }}
                    {% if r_a.expire_on|date('Y-m-d H:i:s') > "now"|date('Y-m-d H:i:s') %}
                       <i class="fa fa-check" aria-hidden="true" style="color:#7cd21c;"></i>
                    {% else %}
                      <i class="fa fa-times" aria-hidden="true" style="color:#d1051f;"></i>
                    {% endif %}
                  {% else %}
                    -  <i class="fa fa-check" aria-hidden="true" style="color:#7cd21c"></i>
                  {% endif %}
                </td>
              </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>

      <div id="feed_tab">
        <h1>{{ "User's publications in feeds" | trans}}</h1>
        <div id="feeds-list">
          {% for f in feeds %}
            <h6 style="max-width:400px; max-height: 30px; padding-bottom: 0px; padding-top: 0px;" data-feed="{{ f.id }}">
              {{ f.title }}
              {% if f.public %}<span style="margin-top: 1px;margin-left:15px;" class="badge badge-success pull-right">public</span>{% endif %}
              <span class="pull-right ">
                <span class="publication-count">{{ feeds_count[f.getId()] }} </span> publication(s)
              </span>
            </h6>
            <div data-feed="{{ f.id }}" class="feed-content" style="max-height: 300px; max-width:600px;"></div>
          {% endfor %}
        </div>
      </div>

      <div id="basket_tab">
        <h1>User basket</h1>

        <div style="margin-bottom: 20px;">
          <select id="basket-databox-filter">
            <option value="">{{ 'button::choose databox' | trans }}</option>
            {% for databoxId in databoxIds %}
              <option value="{{ databoxId }}">{{ databoxId | sbas_labels(app) }}</option>
            {% endfor %}
          </select>

          <input type="number" id="basket-record-filter" placeholder="recordId" style="margin-bottom: 0px;margin-left: 30px;">
        </div>

        <p> <span class="basket-result-count">{{ basket_elements|length }} / {{ basket_elements_count }}</span> (last 200 basket records displayed)</p>
        <table>
          <thead>
          <tr>
            <th>databox name</th>
            <th>record_id</th>
            <th>Basket name</th>
          </tr>
          </thead>
          <tbody id="record_basket_list">
          {% for b_e in basket_elements %}
            <tr>
              <td>{{ b_e.getSbasId() | sbas_labels(app) }}</td>
              <td>{{ b_e.getRecordId() }}</td>
              <td>{{ b_e.basket.name }}</td>
            </tr>
          {% endfor %}
          </tbody>
        </table>
      </div>

    {% endif %}
  </div>
  <div class="form-actions" style="">
    <button class="users_rights_valid btn btn-primary">{{ 'boutton::valider' | trans }}</button>
    <a href="{{ path('admin_users_search') }}" class="users_rights_cancel btn" style="text-decoration:none">{{ 'boutton::retour' | trans }}</a>
  </div>
</div>

<script type="text/javascript">

  $(document).ready(function() {

    function ini_edit_usrs() {
      $('.users_col.options').bind('click', function (event) {
        $('#users_check_uncheck').remove();
        event.stopPropagation();
        event.preventDefault();
        check_uncheck_menu($('input[name="right"]', $(this)).val(), $('input[name="sbas_id"]', $(this)).val(), $(this));
        return false;
      });

      $(document).unbind('click.usersoptions').bind('click.usersoptions', function (event) {
        $('#users_check_uncheck').remove();
      });

      $('table.hoverable tr').hover(
              function () {
                $(this).addClass('hovered');
              },
              function () {
                $(this).removeClass('hovered');
              }
      );

      $('table.hoverable td').hover(
              function () {
                var attr = $('input:first', this).attr('name');
                var right = attr ? attr.split('_').shift() : false;
                if (right)
                  $('td.case_right_' + right).addClass('hovered');
              },
              function () {
                var attr = $('input:first', this).attr('name');
                var right = attr ? attr.split('_').shift() : false;
                if (right)
                  $('td.hovered').removeClass('hovered');
              }
      );

      function user_click_box(event, element, status) {
        var newclass, newvalue, boxes;

        var $element = $(element);

        if ($element.hasClass('right_access')) {
          var base_id = $element.find('input').attr('name').split('_').pop();
          boxes = $('div.base_' + base_id + ':not(:first)');
        }

        if ((typeof status !== 'undefined' && status == 'checked') || (typeof status === 'undefined' && (($element.hasClass('mixed') === true) || ($element.hasClass('unchecked') === true)))) {
          newclass = 'checked';
          newvalue = '1';

          if (boxes)
            boxes.show();
        }
        else {
          newclass = 'unchecked';
          newvalue = '0';

          if (boxes)
            boxes.hide();
        }

        $element.find('input').val(newvalue);
        $element.removeClass('mixed checked unchecked').addClass(newclass);
      }

      function getPreviousPageAfterEdit() {
        let previousDatas = JSON.parse('{{ previousParam | json_encode | raw }}');
        // if there is no previousData.page so it's from connected user
        if (previousDatas.page === undefined) {
          $.get("{{ path('admin_connected_users') }}", function (data) {
            $('#right-ajax').removeClass('loading').html(data);
          });
        } else {
          $.ajax({
            type: 'POST',
            url:  "{{ path('admin_users_search') }}",
            data: previousDatas,
            success: function (data) {
              $('#right-ajax').removeClass('loading').empty().html(data);
            }
          });
        }
      }

      $('#users_rights_form div.switch_right').bind('click', function (event) {
        user_click_box(event, $(this));
      });
      $('#right-ajax button.users_rights_valid').bind('click', function () {
        var datas = {
          users: $('#users_rights_form input[name="users"]').val(),
          values: $('#users_rights_form').serialize(),
          template: $('#users_rights_form select[name="template"]').val(),
          user_infos: $('#user_infos_form').serialize()
        };

        var callback = function (reset_before_apply) {
          datas.reset_before_apply = reset_before_apply;
          $.ajax({
            type: 'POST',
            url: '../admin/users/rights/apply/',
            dataType: 'json',
            data: datas,
            success: function (data) {
              if (!data.error) {
                getPreviousPageAfterEdit();
              } else {
                alert(data.message);
              }
            }
          });
        };

        if (datas.template !== '') {
          dialogUserTemplate(callback);
        } else {
          callback('0');
        }

        return false;
      });

      $('#right-ajax .users_rights_cancel').bind('click', function () {
        $('#right-ajax').empty().addClass('loading').parent().show();
        $('#right').hide();

        getPreviousPageAfterEdit();

        return false;
      });

      var time_buttons = {
        'Ok': function () {
          save_time();
        },
        'Cancel': function () {
          $('#time_dialog').dialog('close');
        }
      };
      $('#time_dialog').dialog({
        resizable: false,
        autoOpen: false,
        draggable: false,
        buttons: time_buttons,
        modal: true
      });
      var quota_buttons = {
        'Ok': function () {
          save_quotas();
        },
        'Cancel': function () {
          $('#quotas_dialog').dialog('close');
        }
      };
      $('#quotas_dialog').dialog({
        resizable: false,
        autoOpen: false,
        draggable: false,
        buttons: quota_buttons,
        modal: true
      });

      var masks_buttons = {
        'Ok': function () {
          save_masks();
        },
        'Cancel': function () {
          $('#masks_dialog').dialog('close');
        }
      };
      $('#masks_dialog').dialog({
        resizable: false,
        autoOpen: false,
        draggable: false,
        buttons: masks_buttons,
        width: 900,
        height: 300,
        modal: true
      });
      $('#users_rights_form .time_trigger').bind('click', function () {
        var base_id = $(this).find('input[name="time_base_id"]').val();
        if ('undefined' !== typeof base_id) {
          $.ajax({
            type: 'POST',
            url: '../admin/users/rights/time/',
            data: {
              users: $('#users_rights_form input[name="users"]').val(),
              base_id: base_id
            },
            success: function (data) {
              var dialog = $('#time_dialog');

              if (dialog.data("ui-dialog")) {
                dialog.html(data).dialog('open');
              }

              $('div.switch_time', dialog).bind('click', function (event) {
                var newclass, boxes;

                boxes = $(this).closest('form').find('input.datepicker');

                if (($(this).hasClass('mixed') === true) || ($(this).hasClass('unchecked') === true)) {
                  newclass = 'checked';
                  boxes.removeAttr('readonly');
                }
                else {
                  newclass = 'unchecked';
                  boxes.attr('readonly', 'readonly');
                }

                $(this).removeClass('mixed checked unchecked').addClass(newclass);
              });
            }
          });
        } else {
          var sbas_id = $(this).find('input[name="time_sbas_id"]').val();

          $.ajax({
            type: 'POST',
            url: '../admin/users/rights/time/sbas/',
            data: {
              users: $('#users_rights_form input[name="users"]').val(),
              sbas_id: sbas_id
            },
            success: function (data) {
              var dialog = $('#time_dialog');

              dialog.html(data);
              dialog.dialog('open');

              $('div.switch_time', dialog).bind('click', function (event) {
                var newclass, boxes;

                boxes = $(this).closest('form').find('input.datepicker');

                if (($(this).hasClass('mixed') === true) || ($(this).hasClass('unchecked') === true)) {
                  newclass = 'checked';
                  boxes.removeAttr('readonly');
                }
                else {
                  newclass = 'unchecked';
                  boxes.attr('readonly', 'readonly');
                }

                $(this).removeClass('mixed checked unchecked').addClass(newclass);
              });
            }
          });
        }
      });
      $('#users_rights_form .quota_trigger').bind('click', function () {
        var base_id = $(this).find('input[name="quota_base_id"]').val();
        $.ajax({
          type: 'POST',
          url: '../admin/users/rights/quotas/',
          data: {
            users: $('#users_rights_form input[name="users"]').val(),
            base_id: base_id
          },
          success: function (data) {
            var dialog = $('#quotas_dialog');

            if (dialog.data("ui-dialog")) {
              dialog.html(data).dialog('open');
            }

            $('div.switch_quota', dialog).bind('click', function (event) {
              var newclass, boxes;

              boxes = $(this).closest('form').find('input:text');

              if (($(this).hasClass('mixed') === true) || ($(this).hasClass('unchecked') === true)) {
                newclass = 'checked';
                boxes.removeAttr('readonly');
              }
              else {
                newclass = 'unchecked';
                boxes.attr('readonly', 'readonly');
              }

              $(this).removeClass('mixed checked unchecked').addClass(newclass);
            });
          }
        });
      });

      $('#users_rights_form .masks_trigger').bind('click', function () {
        var base_id = $(this).find('input[name="masks_base_id"]').val();
        $.ajax({
          type: 'POST',
          url: '../admin/users/rights/masks/',
          data: {
            users: $('#users_rights_form input[name="users"]').val(),
            base_id: base_id
          },
          success: function (data) {
            $('#masks_dialog').html(data).dialog('open');

            $('.switch_masks').bind('click', function () {
              var currentclass, newclass;

              var bit = $(this).find('input[name="bit"]').val();
              currentclass = 'unchecked';
              if ($(this).hasClass('mixed')) {
                currentclass = 'mixed';
              }
              if ($(this).hasClass('checked')) {
                currentclass = 'checked';
              }
              switch (currentclass) {
                case 'mixed':
                default:
                  $('.bitnum_' + bit).removeClass('mixed checked unchecked').addClass('checked')
                  break;
                case 'unchecked':
                  $(this).removeClass('mixed checked unchecked').addClass('checked')
                  break;
                case 'checked':
                  if ($('.checked.bitnum_' + bit).length == 2) {
                    $(this).removeClass('mixed checked unchecked').addClass('unchecked')
                  }
                  else {
                    alert("admin::user:mask: vous devez cocher au moins une case pour chaque status");
                    return;
                  }
                  break;
              }

              var left = $('.bitnum_' + bit + '.bit_left');
              var right = $('.bitnum_' + bit + '.bit_right');

              var maskform = $('#masks_dialog form');
              var vand_and = $('input[name="vand_and"]', maskform);
              var vand_or = $('input[name="vand_or"]', maskform);
              var vxor_and = $('input[name="vxor_and"]', maskform);
              var vxor_or = $('input[name="vxor_or"]', maskform);

              var newbit_vand_and = newbit_vand_or = newbit_vxor_and = newbit_vxor_or = 0;

              if (left.length === 1 && right.length === 1) {
                if (left.hasClass('checked') && right.hasClass('unchecked')) {
                  newbit_vand_and = "1";
                  newbit_vand_or = "1";
                }
                else if (left.hasClass('unchecked') && right.hasClass('checked')) {
                  newbit_vand_and = "1";
                  newbit_vand_or = "1";
                  newbit_vxor_and = "1";
                  newbit_vxor_or = "1";
                }
                vand_and.val(vand_and.val().substr(0, 31 - bit) + newbit_vand_and + vand_and.val().substr(31 + 1 - bit));
                vand_or.val(vand_or.val().substr(0, 31 - bit) + newbit_vand_or + vand_or.val().substr(31 + 1 - bit));
                vxor_and.val(vxor_and.val().substr(0, 31 - bit) + newbit_vxor_and + vxor_and.val().substr(31 + 1 - bit));
                vxor_or.val(vxor_or.val().substr(0, 31 - bit) + newbit_vxor_or + vxor_and.val().substr(31 + 1 - bit));
              }
            });
          }
        });
      });


      function save_masks() {
        var cont = $('#masks_dialog');

        var maskform = $('#masks_dialog form');
        var base_id = $('input[name="base_id"]', maskform).val();
        var users = $('input[name="users"]', maskform).val();
        var vand_and = $('input[name="vand_and"]', maskform).val();
        var vand_or = $('input[name="vand_or"]', maskform).val();
        var vxor_and = $('input[name="vxor_and"]', maskform).val();
        var vxor_or = $('input[name="vxor_or"]', maskform).val();


        $.ajax({
          type: 'POST',
          url: '../admin/users/rights/masks/apply/',
          data: {
            users: users,
            base_id: base_id,
            vand_and: vand_and,
            vand_or: vand_or,
            vxor_and: vxor_and,
            vxor_or: vxor_or
          },
          success: function (data) {
            $('#masks_dialog').dialog('close');
          }
        });
      }


      function save_quotas() {
        var cont = $('#quotas_dialog');
        var base_id = $('input[name="base_id"]', cont).val();
        var users = $('input[name="users"]', cont).val();
        var droits = $('input[name="droits"]', cont).val();
        var restes = $('input[name="restes"]', cont).val();

        var switch_quota = $('.switch_quota', cont);

        if (switch_quota.hasClass('mixed'))
          return;

        var quota = 0;

        if (switch_quota.hasClass('checked'))
          quota = 1;

        $.ajax({
          type: 'POST',
          url: '../admin/users/rights/quotas/apply/',
          data: {
            act: "APPLYQUOTAS",
            users: users,
            base_id: base_id,
            quota: quota,
            droits: droits,
            restes: restes
          },
          success: function (data) {
            $('#quotas_dialog').dialog('close');
          }
        });
      }

      function save_time() {
        var cont = $('#time_dialog');
        var dmin = $('input[name="dmin"]', cont).val();
        var dmax = $('input[name="dmax"]', cont).val();
        var users = $('input[name="users"]', cont).val();
        var base_id = $('input[name="base_id"]', cont).val();
        var sbas_id = $('input[name="sbas_id"]', cont).val();

        var switch_time = $('.switch_time', cont);

        if (switch_time.hasClass('mixed'))
          return;

        var limit = 0;

        if (switch_time.hasClass('checked'))
          limit = 1;

        $.ajax({
          type: 'POST',
          url: '../admin/users/rights/time/apply/',
          data: {
            users: users,
            base_id: base_id,
            sbas_id: sbas_id,
            limit: limit,
            dmin: dmin,
            dmax: dmax
          },
          success: function (data) {
            $('#time_dialog').dialog('close');
          }
        });
      }

      function check_uncheck_menu(right, sbas_id, el) {
        var top = el.offset().top;
        var left = el.offset().left + 16;
        $('body').append('<div id="users_check_uncheck" style="position:absolute;top:' + top + 'px;left:' + left + 'px;">' +
        '<div class="checker" >' +
        language.check_all +
        '<input type="hidden" name="sbas_id" value="' + sbas_id + '"/>' +
        '<input type="hidden" name="right" value="' + right + '"/>' +
        '</div>' +
        '<div class="unchecker">' +
        language.uncheck_all +
        '<input type="hidden" name="sbas_id" value="' + sbas_id + '"/>' +
        '<input type="hidden" name="right" value="' + right + '"/>' +
        '</div></div>');

        $('#users_check_uncheck div').hover(
                function () {
                  $(this).addClass('hovered');
                },
                function () {
                  $(this).removeClass('hovered');
                }
        );
        $('#users_check_uncheck div.checker').bind('click', function (event) {
          event.stopPropagation();
          event.preventDefault();
          users_check(true, $('input[name="sbas_id"]', $(this)).val(), $('input[name="right"]', $(this)).val());
          $('#users_check_uncheck').remove();
        });
        $('#users_check_uncheck div.unchecker').bind('click', function (event) {
          event.stopPropagation();
          event.preventDefault();
          users_check(false, $('input[name="sbas_id"]', $(this)).val(), $('input[name="right"]', $(this)).val());
          $('#users_check_uncheck').remove();
        });

      }

      function users_check(bool, sbas_id, right) {
        var newclass;
        if (bool) {
          newclass = "checked";
        }
        else {
          newclass = "unchecked";
        }
        $('.inside_sbas_' + sbas_id + '.' + right + ':visible').each(function (i, n) {
          user_click_box(null, $(n), newclass);
        });
      }
    }

    ini_edit_usrs();

    $('div.tabs').tabs({
      activate:function( event, ui ) {
        if (ui.newPanel.selector === '#rights_tab' || ui.newPanel.selector === '#user_infos_tab') {
          $("#right-ajax .form-actions").removeClass('hidden');
        } else {
          $("#right-ajax .form-actions").addClass('hidden');
        }
      }
    });

    $('#users_rights_form button#reset_rights').bind('click', function () {
      if (confirm("{{ 'Are you sure you want to reset rights?' | trans }}")) {
        var users = $('#users_rights_form input[name="users"]').val();

        $.ajax({
          type: 'POST',
          url: '/admin/users/rights/reset/',
          dataType: 'json',
          data: {
            users: users
          },
          success: function (data) {
            if (!data.error) {
              if (users === '') {
                return false;
              }

              $('#right-ajax').empty().addClass('loading');
              p4.users.sel = [];
              $.ajax({
                type: 'GET',
                url: '/admin/users/rights/',
                data: {
                  users: users
                },
                success: function (data) {
                  $('#right-ajax').removeClass('loading').html(data);
                }
              });

              return false;
            } else {
              alert(data.message);
            }
          }
        });
      }
    });


    $('body').click(function() {
      $('.users_check_line_wrap').addClass('hide');
    });
    $('.select-all-line-btn').click(function (event) {
      event.stopPropagation();
      var top = $(this).offset().top - 50;
      var left = $(this).offset().left + 60;
      $('.users_check_line_wrap').addClass('hide');
      $(this).closest('.select-all-line').find('.users_check_line_wrap').removeClass('hide').css('top', +top+'px');

    });
    $('.check_left_right').click(function () {
      $(this).closest('.right-items').find('.left-right div').show().removeClass('unchecked').addClass('checked');
      $(this).closest('.right-items').find('.left-right input').val(1);
      $('.users_check_line_wrap').addClass('hide');
    });

    $('.check-all_right').click(function () {
      $(this).closest('.right-items').find('div').show().removeClass('unchecked').addClass('checked');
      $(this).closest('.right-items').find('input').val(1);
      $('.users_check_line_wrap').addClass('hide');
    });

    $('#webhook_activation').on('click', function() {
      let $this = $(this);
      $.ajax({
        type: 'POST',
        url: $this.attr('data-path'),
        dataType: 'json',
        data: {
          action: $this.is(':checked') ? 'activate' : 'deactivate'
        },
        success: function (data) {
          console.log(data.success);
        }
      });
    });

    {% if main_user is not empty and main_user.isTemplate is empty and main_user.isSpecial is empty %}
      $('#reset-auth-failure').on('click', function() {
        let $this = $(this);
        $.ajax({
          type: 'POST',
          url: '/admin/users/auth-failure/reset/',
          dataType: 'json',
          data: {
            username: $this.attr('data-username')
          },
          success: function (data) {
            if (data.success == true) {
              var list =  '';
              $('#auth_failure_locked').empty();
              for (var i=0; i < data.authFailureUnlocked.length; i++ ) {
                 list += '<tr><td>' +
                         data.authFailureUnlocked[i]['username'] + '</td><td>' +
                         data.authFailureUnlocked[i]['ip'] + '</td><td>' +
                         data.authFailureUnlocked[i]['created'] + '</td></tr>';
              }

                $('#auth_failure_unlocked_list').empty().append(list);
            }
          }
        });
      });

      $('input[type=radio][name="email-locked"]').change( function() {
        let $this = $(this);
        $.ajax({
          type: 'POST',
          url: '/admin/users/mail-locked/change/',
          dataType: 'json',
          data: {
            user_id: {{ main_user.getId() }},
            action: $this.val()
          },
          success: function (data) {
          }
        });
      });

      function listRecordAcl() {
        let expiredRight = 0;
        if ($("#expired-right").is(":checked"))
        {
          expiredRight = 1;
        }

        $.ajax({
          type: "GET",
          url: "/admin/users/records-acl/",
          data: {
            databoxId : $("#acl-databox-filter").val(),
            recordId : $("#acl-record-filter").val(),
            expiredRight: expiredRight,
            type: $("#acl-type-filter").val(),
            userId: {{ main_user.getId() }}
          },
          success: function (data) {
            $("#record_acl_list").empty().html(data.content);
            $(".acl-result-count").empty().text(data.total_result + ' / ' + data.total_count);
          }
        });
      }

      function listRecordBasket() {
        $.ajax({
          type: "GET",
          url: "/admin/users/records-basket/",
          data: {
            databoxId : $("#basket-databox-filter").val(),
            recordId : $("#basket-record-filter").val(),
            userId: {{ main_user.getId() }}
          },
          success: function (data) {
            $("#record_basket_list").empty().html(data.content);
            $(".basket-result-count").empty().text(data.total_result + ' / ' + data.total_count);
          }
        });
      }

      function listFeedEntry(userId, feedId, dest) {
        $.ajax({
          type: 'GET',
          url: '/admin/users/feed-entry/',
          dataType: 'json',
          data: {
            userId: userId,
            feedId: feedId
          },
          success: function (data) {
            dest.empty().html(data.content);
            dest.siblings('.ui-state-active').find(".publication-count").text(data.feed_entries_count);
          }
        });
      }

      $("#acl-databox-filter").on('change', function() {
        listRecordAcl();
      });

      $("#acl-record-filter").on('input', function() {
        listRecordAcl();
      });

      $("#expired-right").on('change', function () {
        listRecordAcl();
      });

      $("#acl-type-filter").on('change', function () {
        listRecordAcl();
      });

      $("#basket-databox-filter").on('change', function() {
        listRecordBasket();
      });

      $("#basket-record-filter").on('input', function() {
        listRecordBasket();
      });

      $("#feeds-list").accordion({
        active: false,
        heightStyle: 'content',
        collapsible: true,
        autoHeight:  true,
        fillSpace:   true,
        activate: function(){
          let dest = $(this).find('.ui-state-active').next('.feed-content');
          let feedId = $(this).find('.ui-state-active').attr('data-feed');

          listFeedEntry({{ main_user.getId() }}, feedId, dest)
        }
      });

      $("#feed_tab").on('click', '.delete-publication', function() {
        let feedId = $(this).closest('.feed-content').attr('data-feed');
        let dest = $(this).closest('.feed-content');
        if(confirm('This delete the publication "' + $(this).siblings('.publication-name').text() + '"')) {
          $.ajax({
            type: "POST",
            url: "/admin/users/feed-entry/delete/",
            data: {
              feedEntryId : $(this).attr('data-feed-entry'),
            },
            success: function (data) {
              listFeedEntry({{ main_user.getId() }}, feedId, dest)
            }
          });
        }
      });

    {% endif %}
  });

  require([
    "jquery",
    "common/geonames"
  ], function ($, geonames) {
    var geocompleter = geonames.init($('#user_infos_tab input.geoname_field'), {
      "server": "{{ app['geonames.server-uri'] }}",
      "limit": 40
    });

  });

</script>
