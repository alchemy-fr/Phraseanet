<h1>{{ 'admin::workermanager:tab:searchengine: description' |trans }}</h1>

{{ form_start(form, {'action': path('worker_admin_searchengine')}) }}

<div class="control-group">
    {{ form_row(form.host) }}
</div>

<div class="control-group">
    {{ form_row(form.port) }}
</div>

<div class="control-group">
    {{ form_row(form.indexName) }}
</div>

<div class="control-group">
    <label class="control-label"> {{ 'admin::workermanager:tab:searchengine: Databox to populate' | trans }}</label>
    <div class="controls">
        <label class="checkbox inline">
            <input class="subdef_sbas" type="checkbox" value="0"> {{ 'All' | trans }}
        </label>

        {% for databox in app.getApplicationBox().get_databoxes() %}
            <label class="checkbox inline">
                <input class="subdef_sbas" type="checkbox" name="worker_searchengine[sbas][]"
                       value="{{ databox.get_sbas_id() }}"> {{ databox.get_viewname() }}
                ({{ databox.get_sbas_id() }})
            </label>
        {% endfor %}
    </div>
</div>

<div class="control-group">
    <button type="submit" class="btn btn-primary btn-trigger " id="populateButton" form="worker_searchengine">
        {{ "admin::workermanager:tab:searchengine: Populate" |trans }}
    </button>
</div>

{{ form_end(form) }}

<div class="searchengine-wrapper">
    <h2>{{ 'admin::workermanager:tab:workerinfo: Info populate' | trans }}</h2>
    <button id="refresh-populate-list" class="btn btn-success">
        {{ 'admin::workermanager:tab:searchengine: Refresh info populate' |trans }}
    </button>
    <div class="controls">
        <label class="checkbox inline">
            <input class="running-work refresh-list-checkbox" type="checkbox" value="1"
                   checked> {{ 'admin::workermanager:tab:searchengine: Display running work' | trans }}
        </label>
        <label class="checkbox inline">
            <input class="finished-work refresh-list-checkbox" type="checkbox" value="1"
                   checked> {{ 'admin::workermanager:tab:searchengine: Display finished work' | trans }}
        </label>
    </div>
</div>

<table class="admintable">
    <thead>
    <tr>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: databox_id' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: created' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: published' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: finished' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: status' | trans }}</th>
    </tr>
    </thead>
    <tbody class="populate-list">

    <tr>
        <td>{{ workerRow.databoxId }}</td>
    </tr>
    </tbody>
</table>
<br>
<div class="searchengine-wrapper">
    <h2>{{ 'admin::workermanager:tab:workerinfo: Info subtitle' | trans }}</h2>
    <button id="refresh-subtitle-list" class="btn btn-success">
        {{ 'admin::workermanager:tab:searchengine: Refresh info subtitle' |trans }}
    </button>
    <div class="controls">
        <label class="checkbox inline">
            <input class="running-work refresh-list-checkbox" type="checkbox" value="1"
                   checked> {{ 'admin::workermanager:tab:searchengine: Display running work' | trans }}
        </label>
        <label class="checkbox inline">
            <input class="finished-work refresh-list-checkbox" type="checkbox" value="1"
                   checked> {{ 'admin::workermanager:tab:searchengine: Display finished work' | trans }}
        </label>
    </div>
</div>

<table class="admintable ">
    <thead>
    <tr>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: databox_id' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: record_id' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: permalinkUrl' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: langageSource' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: metaStructureId' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: status' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: created' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: started' | trans }}</th>
        <th class="sortable">{{ 'admin::workermanager:tab:searchengine: finished' | trans }}</th>

    </tr>
    </thead>
    <tbody class="subtitle-list">

    <tr>
        <td>{{ workerRow.databoxId }}</td>
    </tr>
    </tbody>
</table>


<script type="text/javascript">
    $(document).ready(function () {
        $(".subdef_sbas").change(function (e) {
            var alldb = $(".subdef_sbas[value=0]").prop('checked');
            if (alldb) {
                $(".subdef_sbas[value!=0]").prop('checked', true);
            } else {
                $(".subdef_sbas[value!=0]").attr('disabled', false);
            }
        });

        $('#populateButton').on('click', function () {
            checked = $('input[name="worker_searchengine[sbas][]"]:checked').length;

            if (!checked) {
                alert("You must check at least one databox to populate.");

                return false;
            }

            $("form[name='worker_searchengine']").submit();
        });

        $("form[name='worker_searchengine']").on('submit', function () {
            var form = $(this);
            var sbasIds = [];
            $.each($('input[name="worker_searchengine[sbas][]"]:checked'), function () {
                sbasIds.push($(this).val());
            });

            $.ajax({
                type: 'GET',
                url: '/admin/worker-manager/populate-status',
                data: {
                    sbasIds: sbasIds
                },
                success: function (data) {
                    if (data == 0) {
                        $('#right-ajax').empty().addClass('loading');
                        $.ajax({
                            url: form.attr('action'),
                            type: 'POST',
                            data: form.serialize(),
                            success: function (data) {
                                $('#right-ajax').removeClass('loading').html(data);
                            }
                        });
                    } else {
                        alert('{{ "admin::workermanager:tab:searchengine: Warning Worker is in process to indexing one of the selected databox" |trans }}');
                    }
                }
            });

            return false;
        });
        refreshPopulateList();
        refreshSubtitleList();
    });

    /**Populate list**/
    function refreshPopulateList() {

        var running = 1;
        var finished = 1;
        if (!$(".running-work").is(":checked")) {
            running = 0;
        }
        if (!$(".finished-work").is(":checked")) {
            finished = 0;
        }

        $.ajax({
            type: "GET",
            url: "/admin/worker-manager/info-populate?running=" + running + "&finished=" + finished,
            success: function (data) {
                $(".populate-list").empty();
                
                function getSubtitleItem(item) {
                    var itemTable = '<tr>';
                    itemTable += '<td>' + item.databox_id + '</td>';
                    itemTable += '<td>' + item.created.date + '</td>';
                    itemTable += '<td>' + item.published.date + '</td>';
                    itemTable += '<td>' + item.finished && item.finished != null ? item.finished.date : +'' + '</td>';
                    itemTable += '<td>' + item.status + '</td>';
                    itemTable += '</tr>';
                    $(".populate-list").append(itemTable);
                }

                if (data.populateRunning.length > 0) {
                    itemTable = data.populateRunning.map(getSubtitleItem);
                }
                if (data.populateFinished.length > 0) {
                    itemTable = data.populateFinished.map(getSubtitleItem);
                }
            }
        });
    }
    $("#refresh-populate-list").on('click', function () {
        refreshPopulateList();
    });


    /**Subtitle list**/
    function refreshSubtitleList() {
        var running = 1;
        var finished = 1;
        if (!$(".running-work").is(":checked")) {
            running = 0;
        }
        if (!$(".finished-work").is(":checked")) {
            finished = 0;
        }

        $.ajax({
            type: "GET",
            url: " /admin/worker-manager/info-subtitle?running=" + running + "&finished=" + finished,
            success: function (data) {
                $(".subtitle-list").empty();

                function getItem(item) {
                    var itemTable = '<tr>';
                    itemTable += '<td>' + item.databoxId + '</td>';
                    itemTable += '<td>' + item.recordId + '</td>';
                    itemTable += '<td>' + item.permalinkUrl + '</td>';
                    itemTable += '<td>' + item.langageSource + '</td>';
                    itemTable += '<td>' + item.metaStructureId + '</td>';
                    itemTable += '<td>' + item.status + '</td>';
                    itemTable += '<td>' + item.created.date + '</td>';
                    itemTable += '<td>' + item.started.date + '</td>';
                    itemTable += '<td>' + item.finished && item.finished != null ? item.finished.date : +'' + '</td>';
                    itemTable += '</tr>';
                    $(".subtitle-list").append(itemTable);
                }

                if (data.subtitlesRunning.length > 0) {
                    itemTable = data.subtitlesRunning.map(getItem);
                }
                if (data.subtitlesFinished.length > 0) {
                    itemTable = data.subtitlesFinished.map(getItem);
                }
            }
        });
    }
    $("#refresh-subtitle-list").on('click', function () {
        refreshSubtitleList();
    });

</script>
