<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;

/**
 * UsrListEntryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsrListEntryRepository extends EntityRepository
{

    /**
     * Get all lists entries matching a given User
     *
     * @param \User_Adapter $user
     * @param type $like
     */
    public function findUserList(\User_Adapter $user)
    {
        $dql = 'SELECT e FROM Entities\UsrListEntry e
            WHERE e.usr_id = :usr_id';


        $params = array(
            'usr_id' => $user->get_id(),
        );

        $query = $this->_em->createQuery($dql);
        $query->setParameters($params);

        return $query->getResult();
    }

    public function findEntryByListAndEntryId(\Entities\UsrList $list, $entry_id)
    {
        $entry = $this->find($entry_id);

        if ( ! $entry) {
            throw new \Exception_NotFound('Entry not found');
        }

        /* @var $entry \Entities\UsrListEntry */
        if ($entry->getList()->getId() != $list->getId()) {
            throw new \Exception_Forbidden('Entry mismatch list');
        }

        return $entry;
    }

    public function findEntryByListAndUsrId(\Entities\UsrList $list, $usr_id)
    {
        $dql = 'SELECT e FROM Entities\UsrListEntry e
              JOIN e.list l
            WHERE e.usr_id = :usr_id AND l.id = :list_id';

        $params = array(
            'usr_id'  => $usr_id,
            'list_id' => $list->getId(),
        );

        $query = $this->_em->createQuery($dql);
        $query->setParameters($params);

        $entry = $query->getResult();

        if ( ! $entry) {
            throw new \Exception_NotFound('Entry not found');
        }

        return $query->getSingleResult();
    }
}
