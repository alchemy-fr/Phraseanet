<?php

namespace Alchemy\Phrasea\Model\Proxies\__CG__\Alchemy\Phrasea\Model\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Alchemy\Phrasea\Model\Entities\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'login', 'email', 'password', 'nonce', 'saltedPassword', 'firstName', 'lastName', 'gender', 'address', 'city', 'country', 'zipCode', 'geonameId', 'locale', 'timezone', 'job', 'activity', 'company', 'phone', 'fax', 'admin', 'guest', 'mailNotificationsActivated', 'requestNotificationsActivated', 'ldapCreated', 'lastModel', 'pushList', 'canChangeProfil', 'canChangeFtpProfil', 'lastConnection', 'mailLocked', 'deleted', 'created', 'updated', 'modelOf', 'ftpCredential', 'queries', 'settings', 'notificationSettings');
        }

        return array('__isInitialized__', 'id', 'login', 'email', 'password', 'nonce', 'saltedPassword', 'firstName', 'lastName', 'gender', 'address', 'city', 'country', 'zipCode', 'geonameId', 'locale', 'timezone', 'job', 'activity', 'company', 'phone', 'fax', 'admin', 'guest', 'mailNotificationsActivated', 'requestNotificationsActivated', 'ldapCreated', 'lastModel', 'pushList', 'canChangeProfil', 'canChangeFtpProfil', 'lastConnection', 'mailLocked', 'deleted', 'created', 'updated', 'modelOf', 'ftpCredential', 'queries', 'settings', 'notificationSettings');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', array());

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogin($login)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogin', array($login));

        return parent::setLogin($login);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getNonce()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNonce', array());

        return parent::getNonce();
    }

    /**
     * {@inheritDoc}
     */
    public function setNonce($nonce)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNonce', array($nonce));

        return parent::setNonce($nonce);
    }

    /**
     * {@inheritDoc}
     */
    public function isSaltedPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSaltedPassword', array());

        return parent::isSaltedPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setSaltedPassword($saltedPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSaltedPassword', array($saltedPassword));

        return parent::setSaltedPassword($saltedPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', array());

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($gender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', array($gender));

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipCode', array());

        return parent::getZipCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipCode($zipCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipCode', array($zipCode));

        return parent::setZipCode($zipCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeonameId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeonameId', array());

        return parent::getGeonameId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeonameId($geonameId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeonameId', array($geonameId));

        return parent::setGeonameId($geonameId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', array());

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', array($locale));

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimezone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimezone', array());

        return parent::getTimezone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimezone($timezone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimezone', array($timezone));

        return parent::setTimezone($timezone);
    }

    /**
     * {@inheritDoc}
     */
    public function getJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJob', array());

        return parent::getJob();
    }

    /**
     * {@inheritDoc}
     */
    public function setJob($job)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJob', array($job));

        return parent::setJob($job);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivity', array());

        return parent::getActivity();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivity($activity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivity', array($activity));

        return parent::setActivity($activity);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', array());

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany($company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', array($company));

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getFax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFax', array());

        return parent::getFax();
    }

    /**
     * {@inheritDoc}
     */
    public function setFax($fax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFax', array($fax));

        return parent::setFax($fax);
    }

    /**
     * {@inheritDoc}
     */
    public function isAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAdmin', array());

        return parent::isAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdmin($admin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdmin', array($admin));

        return parent::setAdmin($admin);
    }

    /**
     * {@inheritDoc}
     */
    public function isGuest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isGuest', array());

        return parent::isGuest();
    }

    /**
     * {@inheritDoc}
     */
    public function setGuest($guest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuest', array($guest));

        return parent::setGuest($guest);
    }

    /**
     * {@inheritDoc}
     */
    public function hasMailNotificationsActivated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasMailNotificationsActivated', array());

        return parent::hasMailNotificationsActivated();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailNotificationsActivated($mailNotifications)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailNotificationsActivated', array($mailNotifications));

        return parent::setMailNotificationsActivated($mailNotifications);
    }

    /**
     * {@inheritDoc}
     */
    public function hasRequestNotificationsActivated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRequestNotificationsActivated', array());

        return parent::hasRequestNotificationsActivated();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequestNotificationsActivated($requestNotifications)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequestNotificationsActivated', array($requestNotifications));

        return parent::setRequestNotificationsActivated($requestNotifications);
    }

    /**
     * {@inheritDoc}
     */
    public function hasLdapCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasLdapCreated', array());

        return parent::hasLdapCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setLdapCreated($ldapCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLdapCreated', array($ldapCreated));

        return parent::setLdapCreated($ldapCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelOf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelOf', array());

        return parent::getModelOf();
    }

    /**
     * {@inheritDoc}
     */
    public function setModelOf(\Alchemy\Phrasea\Model\Entities\User $owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModelOf', array($owner));

        return parent::setModelOf($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastModel', array());

        return parent::getLastModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastModel($lastModel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastModel', array($lastModel));

        return parent::setLastModel($lastModel);
    }

    /**
     * {@inheritDoc}
     */
    public function getPushList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPushList', array());

        return parent::getPushList();
    }

    /**
     * {@inheritDoc}
     */
    public function setPushList($pushList)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPushList', array($pushList));

        return parent::setPushList($pushList);
    }

    /**
     * {@inheritDoc}
     */
    public function canChangeProfil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canChangeProfil', array());

        return parent::canChangeProfil();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanChangeProfil($canChangeProfil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanChangeProfil', array($canChangeProfil));

        return parent::setCanChangeProfil($canChangeProfil);
    }

    /**
     * {@inheritDoc}
     */
    public function canChangeFtpProfil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canChangeFtpProfil', array());

        return parent::canChangeFtpProfil();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanChangeFtpProfil($canChangeFtpProfil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanChangeFtpProfil', array($canChangeFtpProfil));

        return parent::setCanChangeFtpProfil($canChangeFtpProfil);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastConnection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastConnection', array());

        return parent::getLastConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastConnection(\DateTime $lastConnection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastConnection', array($lastConnection));

        return parent::setLastConnection($lastConnection);
    }

    /**
     * {@inheritDoc}
     */
    public function isMailLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMailLocked', array());

        return parent::isMailLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailLocked($mailLocked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailLocked', array($mailLocked));

        return parent::setMailLocked($mailLocked);
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', array());

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', array($deleted));

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(\DateTime $created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated(\DateTime $updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getFtpCredential()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFtpCredential', array());

        return parent::getFtpCredential();
    }

    /**
     * {@inheritDoc}
     */
    public function setFtpCredential(\Alchemy\Phrasea\Model\Entities\FtpCredential $ftpCredential = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFtpCredential', array($ftpCredential));

        return parent::setFtpCredential($ftpCredential);
    }

    /**
     * {@inheritDoc}
     */
    public function getQueries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQueries', array());

        return parent::getQueries();
    }

    /**
     * {@inheritDoc}
     */
    public function addQuery(\Alchemy\Phrasea\Model\Entities\UserQuery $query)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addQuery', array($query));

        return parent::addQuery($query);
    }

    /**
     * {@inheritDoc}
     */
    public function getSettings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSettings', array());

        return parent::getSettings();
    }

    /**
     * {@inheritDoc}
     */
    public function getSettingValue($name, $default = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSettingValue', array($name, $default));

        return parent::getSettingValue($name, $default);
    }

    /**
     * {@inheritDoc}
     */
    public function addSetting(\Alchemy\Phrasea\Model\Entities\UserSetting $setting)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSetting', array($setting));

        return parent::addSetting($setting);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotificationSettings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotificationSettings', array());

        return parent::getNotificationSettings();
    }

    /**
     * {@inheritDoc}
     */
    public function addNotificationSettings(\Alchemy\Phrasea\Model\Entities\UserNotificationSetting $notificationSetting)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNotificationSettings', array($notificationSetting));

        return parent::addNotificationSettings($notificationSetting);
    }

    /**
     * {@inheritDoc}
     */
    public function isTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTemplate', array());

        return parent::isTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function isSpecial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSpecial', array());

        return parent::isSpecial();
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName(\Symfony\Component\Translation\TranslatorInterface $translator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', array($translator));

        return parent::getDisplayName($translator);
    }

}
