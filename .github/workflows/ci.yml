name: testCI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PHRASEANET_DOCKER_TAG: ${{ github.head_ref }}
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  CACHE_REGISTRY: ghcr.io/${{ github.repository_owner }}
jobs:

  build-test:

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: build phraseanet-setup
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/phraseanet-setup:build-cache
          cache-to: type=registry,mode=max,ref=${{ env.CACHE_REGISTRY }}/phraseanet-setup:build-cache
          target: phraseanet-setup
          tags: ${{ env.REGISTRY }}/phraseanet-setup:${{ env.PHRASEANET_DOCKER_TAG }}
      - name: build phraseanet-nginx
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/phraseanet-nginx:build-cache
          cache-to: type=registry,mode=max,ref=${{ env.CACHE_REGISTRY }}/phraseanet-nginx:build-cache
          target: phraseanet-nginx
          tags: ${{ env.REGISTRY }}/phraseanet-nginx:${{ env.PHRASEANET_DOCKER_TAG }}
      - name: build phraseanet-fpm
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/phraseanet-fpm:build-cache
          cache-to: type=registry,mode=max,ref=${{ env.CACHE_REGISTRY }}/phraseanet-fpm:build-cache
          target: phraseanet-fpm
          tags: ${{ env.REGISTRY }}/phraseanet-fpm:${{ env.PHRASEANET_DOCKER_TAG }}
      - name: build phraseanet-worker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/phraseanet-worker:build-cache
          cache-to: type=registry,mode=max,ref=${{ env.CACHE_REGISTRY }}/phraseanet-worker:build-cache
          target: phraseanet-worker
          tags: ${{ env.REGISTRY }}/phraseanet-worker:${{ env.PHRASEANET_DOCKER_TAG }}
      - name: build phraseanet-db
        uses: docker/build-push-action@v4
        with:
          context: ./docker/db
          file: ./docker/db/Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/phraseanet-db:build-cache
          cache-to: type=registry,mode=max,ref=${{ env.CACHE_REGISTRY }}/phraseanet-db:build-cache
          tags: ${{ env.REGISTRY }}/phraseanet-db:${{ env.PHRASEANET_DOCKER_TAG }}
      - name: build phraseanet-elasticsearch
        uses: docker/build-push-action@v4
        with:
          context: ./docker/elasticsearch
          file: ./docker/elasticsearch/Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/phraseanet-elasticsearch:build-cache
          cache-to: type=registry,mode=max,ref=${{ env.CACHE_REGISTRY }}/phraseanet-elasticsearch:build-cache
          tags: ${{ env.REGISTRY }}/phraseanet-elasticsearch:${{ env.PHRASEANET_DOCKER_TAG }}
      - name: install
        run: |
          PHRASEANET_DOCKER_REGISTRY=${{ env.REGISTRY }} PHRASEANET_DOCKER_TAG=${{ env.PHRASEANET_DOCKER_TAG }} docker compose pull
          PHRASEANET_DOCKER_REGISTRY=${{ env.REGISTRY }} PHRASEANET_DOCKER_TAG=${{ env.PHRASEANET_DOCKER_TAG }} docker compose up -d
      - name: init tools test
        run: |
          docker compose exec -T phraseanet curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
          docker compose exec -T phraseanet php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
          docker compose exec -T phraseanet composer install --ignore-platform-reqs --no-interaction
          docker compose exec -T -e PHRASEANET_BASE_URL=http://127.0.0.1 phraseanet docker/phraseanet/setup/auto-install.sh
          docker compose exec -T phraseanet bin/developer ini:setup-tests-dbs -v
          docker compose exec -T phraseanet bin/developer phraseanet:regenerate-sqlite -v
          docker compose exec -T phraseanet bin/developer phraseanet:generate-js-fixtures -v
      - name: test exclude-group legacy
        run: |
          docker compose exec -T phraseanet bin/console system:clear-cache
          docker compose exec -T phraseanet php -d memory_limit=-1 vendor/phpunit/phpunit/phpunit  --exclude-group legacy
      - name: test group legacy and exclude-group web
        run: |
          docker compose exec -T phraseanet bin/console system:clear-cache
          docker compose exec -T phraseanet php -d memory_limit=-1 vendor/phpunit/phpunit/phpunit  --group legacy --exclude-group web
      - name: test group web
          docker compose exec -T phraseanet bin/console system:clear-cache
          docker compose exec -T phraseanet php -d memory_limit=-1 vendor/phpunit/phpunit/phpunit --group web
