#!/usr/bin/env php
<?php
/*
 * This file is part of Phraseanet
 *
 * (c) 2005-2010 Alchemy
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace KonsoleKommander;

/**
 *
 * @license     http://opensource.org/licenses/gpl-3.0 GPLv3
 * @link        www.phraseanet.com
 */
use Alchemy\Phrasea\Core\Version;
use Alchemy\Phrasea\Command\BuildMissingSubdefs;
use Alchemy\Phrasea\Command\CreateCollection;
use Alchemy\Phrasea\Command\MailTest;
use Alchemy\Phrasea\Command\RecordAdd;
use Alchemy\Phrasea\Command\RescanTechnicalDatas;
use Alchemy\Phrasea\Command\UpgradeDBDatas;
use Alchemy\Phrasea\CLI;
use Alchemy\Phrasea\Command\Plugin\AddPlugin;
use Alchemy\Phrasea\Command\Plugin\RemovePlugin;

require_once __DIR__ . '/../lib/autoload.php';

try {
    $app = new CLI("
  _____  _    _ _____            _____ ______          _   _ ______ _______
 |  __ \| |  | |  __ \    /\    / ____|  ____|   /\   | \ | |  ____|__   __|
 | |__) | |__| | |__) |  /  \  | (___ | |__     /  \  |  \| | |__     | |
 |  ___/|  __  |  _  /  / /\ \  \___ \|  __|   / /\ \ | . ` |  __|    | |
 | |    | |  | | | \ \ / ____ \ ____) | |____ / ____ \| |\  | |____   | |
 |_|    |_|  |_|_|  \_|_/    \_\_____/|______/_/    \_\_| \_|______|  |_|
  _  __                 _       _  __                             _
 | |/ /___ _ _  ___ ___| |___  | |/ /___ _ __  _ __  __ _ _ _  __| |___ _ _
 | ' </ _ \ ' \(_-</ _ \ / -_) | ' </ _ \ '  \| '  \/ _` | ' \/ _` / -_) '_|
 |_|\_\___/_||_/__/\___/_\___| |_|\_\___/_|_|_|_|_|_\__,_|_||_\__,_\___|_|

 Phraseanet Copyright (C) 2004 Alchemy
 This program comes with ABSOLUTELY NO WARRANTY.
 This is free software, and you are welcome to redistribute it
 under certain conditions; type `about:license' for details.\n\n"
            . ' KONSOLE KOMMANDER', Version::getName() . ' ' . Version::getNumber());

    if (!$app['phraseanet.configuration-tester']->isInstalled()) {
        throw new \RuntimeException('Phraseanet is not installed, use setup command instead');
    }
    if (!$app['phraseanet.configuration-tester']->isUpToDate()) {
        throw new \RuntimeException('Phraseanet is not up-to-date, use setup command instead');
    }

    $app->command(new \module_console_aboutAuthors('about:authors'));
    $app->command(new \module_console_aboutLicense('about:license'));

    $app->command(new \module_console_checkExtension('check:extension'));

    $app->command(new UpgradeDBDatas('system:upgrade-datas'));

    $app->command(new \module_console_sphinxGenerateSuggestion('sphinx:generate-suggestions'));

    $app->command(new \module_console_systemMailCheck('system:mail-check'));
    $app->command(new \module_console_systemBackupDB('system:backup-db'));
    $app->command(new \module_console_systemClearCache('system:clear-cache'));
    $app->command(new \module_console_systemTemplateGenerator('system:template-generator'));
    $app->command(new \module_console_systemExport('system:export'));

    $app->command(new \module_console_taskrun('task:run'));
    $app->command(new \module_console_tasklist('task:list'));
    $app->command(new \module_console_taskState('task:state'));
    $app->command(new \module_console_schedulerState('scheduler:state'));
    $app->command(new \module_console_schedulerStop('scheduler:stop'));
    $app->command(new \module_console_schedulerStart('scheduler:start'));
    $app->command(new \module_console_fileEnsureProductionSetting('check:ensure-production-settings'));
    $app->command(new \module_console_fileEnsureDevSetting('check:ensure-dev-settings'));

    $app->command(new Mailtest('mail:test'));

    $app->command(new \module_console_fieldsList('fields:list'));
    $app->command(new \module_console_fieldsDelete('fields:delete'));
    $app->command(new \module_console_fieldsRename('fields:rename'));
    $app->command(new \module_console_fieldsMerge('fields:merge'));

    $app->command(new CreateCollection('collection:create'));

    $app->command(new RecordAdd('records:add'));
    $app->command(new RescanTechnicalDatas('records:rescan-technical-datas'));
    $app->command(new BuildMissingSubdefs('records:build-missing-subdefs'));

    $app->command(new AddPlugin());
    $app->command(new RemovePlugin());

    $result_code = is_int($app->run()) ? : 1;
} catch (\Exception $e) {
    $result_code = 1;
    echo sprintf("\nAn error occured :\n\n\t\033[0;31m%s\033[0;37m\n\n", $e->getMessage());
}

exit($result_code);
