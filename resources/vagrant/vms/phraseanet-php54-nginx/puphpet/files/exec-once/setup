#!/bin/bash

# timezone
sudo sh -c 'echo "Europe/Paris" > /etc/timezone'
sudo dpkg-reconfigure -f noninteractive tzdata 

# locales
sudo sh -c "echo 'LANGUAGE=en_GB.UTF-8' >> /etc/environment"
sudo sh -c "echo 'LANG=en_GB.UTF-8' >> /etc/environment"
sudo sh -c "echo 'LC_ALL=en_GB.UTF-8' >> /etc/environment"
sudo sh -c 'echo "en_GB.UTF-8 UTF-8" >> /etc/locale.gen'
sudo sh -c 'echo "de_DE.UTF-8 UTF-8" >> /etc/locale.gen'
sudo sh -c 'echo "es_ES.UTF-8 UTF-8" >> /etc/locale.gen'
sudo sh -c 'echo "fr_FR.UTF-8 UTF-8" >> /etc/locale.gen'
sudo sh -c 'echo "nl_NL.UTF-8 UTF-8" >> /etc/locale.gen'
sudo locale-gen en_GB en_GB.UTF-8 fr_FR fr_FR.UTF-8 de_DE de_DE.UTF-8 nl_NL nl_NL.UTF-8
sudo dpkg-reconfigure -f noninteractive locales

#ffmpeg
sudo sh -c 'echo "deb http://www.deb-multimedia.org wheezy main non-free" >> /etc/apt/sources.list'
sudo sh -c 'echo "deb-src http://www.deb-multimedia.org wheezy main non-free" >> /etc/apt/sources.list'

sudo apt-get update
sudo apt-get install --force-yes -y deb-multimedia-keyring
sudo apt-get update
sudo apt-get install --force-yes -y libfaac-dev

cd /tmp
wget –quiet https://www.ffmpeg.org/releases/ffmpeg-1.2.8.tar.gz
tar -zxvf ffmpeg-1.2.8.tar.gz
cd ffmpeg-1.2.8

wget –quiet -O fdk-aac.zip https://github.com/mstorsjo/fdk-aac/zipball/master
sudo -u vagrant unzip fdk-aac.zip
cd mstorsjo-fdk-aac*
autoreconf -fiv
./configure --disable-shared
make
sudo make install
make distclean
cd ..

./configure --enable-gpl \
            --enable-nonfree \
            --enable-libfaac \
            --enable-libgsm \
            --enable-libmp3lame \
            --enable-libtheora \
            --enable-libvorbis \
            --enable-libx264 \
            --enable-libxvid \
            --enable-zlib \
            --enable-postproc \
            --enable-swscale \
            --enable-pthreads \
            --enable-x11grab \
            --enable-libdc1394 \
            --enable-version3 \
            --enable-libopencore-amrnb \
            --enable-libopencore-amrwb
make
sudo make install

# node + npm
cd /tmp
wget –quiet "http://nodejs.org/dist/v0.10.29/node-v0.10.29-linux-x64.tar.gz"
tar -zxvf node-v0.10.29-linux-x64.tar.gz
cd node-v0.10.29-linux-x64
find . -maxdepth 1 -type f -exec rm {} \;
sudo cp -rf * /usr/local/

# npm binaries
sudo npm install -g recess
sudo npm install -g grunt-cli
sudo npm install -g bower
sudo npm install -g uglify-js

#twig
cd /tmp
git clone https://github.com/fabpot/Twig.git
cd Twig/ext/twig
phpize
./configure
make
sudo make install
sudo sh -c 'echo "extension=twig.so" > /etc/php5/cli/conf.d/twig.ini'
sudo sh -c 'echo "extension=twig.so" > /etc/php5/fpm/conf.d/twig.ini'

# swftools
cd /tmp
wget –quiet http://www.swftools.org/swftools-0.9.2.tar.gz
tar -xzvf swftools-0.9.2.tar.gz
cd swftools-0.9.2
./configure
make
sudo make install

# zmq php extension
yes | sudo pecl install zmq-beta
if [ $? -eq 0 ]; then
    sudo sh -c 'echo "extension=zmq.so" > /etc/php5/cli/conf.d/zmq.ini'
    sudo sh -c 'echo "extension=zmq.so" > /etc/php5/fpm/conf.d/zmq.ini'
fi

# libevent php extension
sudo apt-get autoremove --yes --purge libevent-dev
sudo apt-get install --yes libevent-dev
yes | sudo pecl install libevent-beta
if [ $? -eq 0 ]; then
    sudo sh -c 'echo ";extension=libevent.so" > /etc/php5/cli/conf.d/libevent.ini'
    sudo sh -c 'echo ";extension=libevent.so" > /etc/php5/fpm/conf.d/libevent.ini'
fi

# cache file sd
sudo sh -c 'echo "RUN=yes" > /etc/default/cachefilesd'

# copy www.conf
sudo sh -c 'cat /vagrant/resources/vagrant/config/nginx/php5-fpm-www.conf > /etc/php5/fpm/pool.d/www.conf'

#setup phraseanet
if [ ! -f /var/www/phraseanet/config/configuration.yml ]
then
    #copy configuration template
    mv /var/www/phraseanet/lib/conf.d/configuration.yml /var/www/phraseanet/lib/conf.d/configuration.yml.bkp
    cp /vagrant/resources/vagrant/config/phraseanet/configuration.yml /var/www/phraseanet/lib/conf.d/configuration.yml
    cd /var/www/phraseanet
    sudo -u vagrant composer install -n --prefer-source --dev
    sudo -u vagrant npm install
    sudo -u vagrant grunt install-assets
    sudo -u vagrant bin/developer assets:compile-less
    sudo -u vagrant rm -f /var/www/phraseanet/lib/conf.d/configuration.yml
    mv /var/www/phraseanet/lib/conf.d/configuration.yml.bkp /var/www/phraseanet/lib/conf.d/configuration.yml
fi

# restart services
sudo service mysql restart
sudo service php5-fpm restart
sudo service nginx restart

# stoping iptable
sudo service iptables-persistent stop

# reload bash
source ~/.bashrc