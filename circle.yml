# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/Phraseanet
    docker:
      # specify the version you desire here
      - image: circleci/php:7.0.27-cli-node-browsers
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_PASSWORD=
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.1
        environment:
          http.host: '0.0.0.0'
          http.port: 9200
          xpack.security.enabled: false
    steps:
      - checkout
      - restore_cache:
          keys:
            - elasticsearch-5.6.1 # relative to the build directory
            - node_modules
            - ~/.composer

      - run:
          name: sudo apt-get install automake libtool libicu-dev libzmq-dev mysql-client mysql-server zlib1g-dev
          command: |
            sudo apt-get install automake libtool libicu-dev libzmq-dev mysql-client mysql-server zlib1g-dev
      - run:
          name: sudo docker-php-ext-configure intl
          command: |
            sudo docker-php-ext-configure intl
      - run:
          name: sudo docker-php-ext-install intl bcmath pdo_mysql zip
          command: |
            sudo docker-php-ext-install intl bcmath pdo_mysql zip
      - run:
          name: git clone https://github.com/alanxz/rabbitmq-c
          command: |
            git clone https://github.com/alanxz/rabbitmq-c
      - run:
          name: cd rabbitmq-c && git checkout 2ca1774489328cde71195f5fa95e17cf3a80cb8a
          command: |
            cd rabbitmq-c && git checkout 2ca1774489328cde71195f5fa95e17cf3a80cb8a
      - run:
          name: cd rabbitmq-c && git submodule init && git submodule update && autoreconf -i && ./configure && make && sudo make install
          command: |
            cd rabbitmq-c && git submodule init && git submodule update && autoreconf -i && ./configure && make && sudo make install
      - run:
          name: yes '' | sudo pecl install zmq-beta
          command: |
            set +o pipefail
            yes '' | sudo pecl install zmq-beta
      - run:
          name: sudo docker-php-ext-enable zmq
          command: |
            sudo docker-php-ext-enable zmq
      - run:
          name: npm rebuild node-sass
          command: |
            npm rebuild node-sass
      - run:
          name: composer install --no-progress --no-interaction --optimize-autoloader
          command: |
            composer install --no-progress --no-interaction --optimize-autoloader

      - run:
          name: npm install
          command: |
            npm install

      - run:
          name: elastic
          command: |
            sudo ./elasticsearch-5.6.1/bin/plugin install analysis-icu
            ./elasticsearch-5.6.1/bin/elasticsearch -d -v
            sleep 10 && wget --waitretry=5 --retry-connrefused -v http://172.23.0.3:9200/

      - run:
          name: mysql -h 127.0.0.1 -u root -e 'CREATE DATABASE update39_test;CREATE DATABASE ab_test;CREATE DATABASE db_test;SET @@global.sql_mode=STRICT_ALL_TABLES;SET @@global.max_allowed_packet=33554432;SET @@global.wait_timeout=999999;';
          command: |
            mysql -h 127.0.0.1 -u root -e 'CREATE DATABASE update39_test;CREATE DATABASE ab_test;CREATE DATABASE db_test;SET @@global.sql_mode=STRICT_ALL_TABLES;SET @@global.max_allowed_packet=33554432;SET @@global.wait_timeout=999999;';

      - run:
          name: Application setup
          command: |
            ./bin/developer system:uninstall -v
            ./bin/setup system:install -v --email=test@phraseanet.com --password=test --db-host=127.0.0.1 --db-user=root --db-template=fr --db-password= --databox=db_test --appbox=ab_test --server-name=http://127.0.0.1 -y;

      - run:
          name: Application tests setup 1
          command: |
            ./bin/developer ini:setup-tests-dbs -v

      - run:
          name: Application tests setup 3
          command: |
            ./bin/console searchengine:index -c -v

      - run:
          name: Application tests setup 4
          command: |
            ./bin/developer phraseanet:regenerate-sqlite -v
            ./bin/developer phraseanet:generate-js-fixtures -v
#      - run:
#          name: Tests !!
#          command: |
#            case $CIRCLE_NODE_INDEX in 0) EXIT=0; php -d memory_limit=-1 bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit-unit.xml --exclude-group legacy || EXIT=$?; php -d memory_limit=-1 bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit-legacy-no-web.xml --group legacy --exclude-group web || EXIT=$?; exit $EXIT;; 1) php -d memory_limit=-1 bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit-legacy-web.xml --group web ;; esac:
      - run:
          name: Tests 2 ?
          command: |
            php -d memory_limit=-1 bin/phpunit -c phpunit.xml.dist;

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build