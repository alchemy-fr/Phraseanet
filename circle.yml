# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.0.27-cli-node-browsers
      - image: circleci/node:latest-browsers
    services:
      - memcached
      - redis
      - mysql
      - rabbitmq-server
    database:
      override:
        - mysql -u ubuntu -e 'CREATE DATABASE update39_test;CREATE DATABASE ab_test;CREATE DATABASE db_test;SET @@global.sql_mode=STRICT_ALL_TABLES;SET @@global.max_allowed_packet=33554432;SET @@global.wait_timeout=999999;';
      post:
        - "./bin/developer system:uninstall -v"
        - "./bin/setup system:install -v --email=test@phraseanet.com --password=test --db-host=127.0.0.1 --db-user=ubuntu --db-template=fr --db-password= --databox=db_test --appbox=ab_test --server-name=http://127.0.0.1 -y;"
        - "./bin/developer ini:setup-tests-dbs -v"
        - "./bin/console searchengine:index:create -v"
        - "./bin/developer phraseanet:regenerate-sqlite -v"
        - "./bin/developer phraseanet:generate-js-fixtures -v"
    steps:
      - checkout
      - restore_cache:
          keys:
            - elasticsearch-2.3.3 # relative to the build directory
            - node_modules
            - ~/.composer

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}
      - run: sudo apt-get install libtool
      - run: sudo apt-get install automake
      - run: git clone https://github.com/alanxz/rabbitmq-c
      - run: cd rabbitmq-c && git checkout 2ca1774489328cde71195f5fa95e17cf3a80cb8a
      - run: cd rabbitmq-c && git submodule init && git submodule update && autoreconf -i && ./configure && make && sudo make install
      - run: mkdir /tmp
      - run: pecl config-set temp_dir /tmp
      - run: pecl channel-update pear.php.net
      - run: yes '' | pecl install amqp-1.9.3
      - run: yes '' | pecl install imagick
      - run: sudo apt-get install libzmq-dev
      - run: yes '' | pecl install zmq-beta
      - run: echo "extension = amqp.so" > /opt/circleci/php/$(phpenv global)/etc/conf.d/amqp.ini
      - run: echo "extension = zmq.so" > /opt/circleci/php/$(phpenv global)/etc/conf.d/zmq.ini
      - run: echo "date.timezone = UTC" > /opt/circleci/php/$(phpenv global)/etc/conf.d/timezone.ini
      - run: sed -i 's/^\(session.cache_limiter = \).*/\1""/' /opt/circleci/php/$(phpenv global)/etc/php.ini
      - run: npm rebuild node-sass
      - run: composer install --no-progress --no-interaction --optimize-autoloader
      - run: npm install
      - run: if [[ ! -e elasticsearch-2.3.3 ]]; then wget --no-check-certificate https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-2.3.3.tar.gz && tar -xvf elasticsearch-2.3.3.tar.gz && elasticsearch-2.3.3/bin/plugin install analysis-icu; fi
      - elasticsearch-2.3.3/bin/elasticsearch: {background: true}
      - run : php -d memory_limit=-1 bin/phpunit -c phpunit.xml.dist;

workflows:
  version: 2
  build_and_test:
    jobs:
      - build


    #working_directory: ~/Phraseane
#
#
#
#version: 2
#general:
#  branches:
#    ignore:
#      - '3.6'
#      - '3.7'
#      - '3.8'
#
#jobs:
#  build:
#    docker:
#      - image: circleci/php:7.0.24
#      - image: circleci/node:stable
#    services:
#      - memcached
#      - redis
#      - mysql
#      - rabbitmq-server
#
#
#
#
#
##test:
##  override:
##    - case $CIRCLE_NODE_INDEX in 0) EXIT=0; php -d memory_limit=-1 bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit-unit.xml --exclude-group legacy || EXIT=$?; php -d memory_limit=-1 bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit-legacy-no-web.xml --group legacy --exclude-group web || EXIT=$?; exit $EXIT;; 1) php -d memory_limit=-1 bin/phpunit --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit-legacy-web.xml --group web ;; esac:
##    #- php -d memory_limit=-1 bin/phpunit -c phpunit.xml.dist;
#
#test:
#  override:
#    -
#        parallel: true